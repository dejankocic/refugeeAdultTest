{"version":3,"sources":["./src/core/features/login/pages/change-password/change-password.html","./src/core/features/login/pages/change-password/change-password.module.ts","./src/core/features/login/pages/change-password/change-password.ts"],"names":[],"mappings":"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","file":"pages-change-password-change-password-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-title>\\n            <h1 *ngIf=\\\"!changingPassword\\\">{{ 'core.login.changepassword' | translate }}</h1>\\n            <h1 *ngIf=\\\"changingPassword\\\">{{ 'core.login.reconnecttosite' | translate }}</h1>\\n        </ion-title>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" (click)=\\\"showHelp()\\\" [attr.aria-label]=\\\"'core.help' | translate\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"far-question-circle\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-list class=\\\"list-item-limited-width\\\">\\n        <ng-container *ngIf=\\\"!changingPassword\\\">\\n            <ion-item class=\\\"ion-text-wrap\\\">\\n                <ion-label>\\n                    <h2>{{ 'core.login.forcepasswordchangenotice' | translate }}</h2>\\n                </ion-label>\\n            </ion-item>\\n            <ion-button class=\\\"ion-text-wrap ion-margin\\\" expand=\\\"block\\\" (click)=\\\"openChangePasswordPage()\\\">\\n                {{ 'core.login.changepasswordbutton' | translate }}\\n            </ion-button>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"changingPassword\\\">\\n            <ion-item class=\\\"ion-text-wrap\\\">\\n                <ion-label>\\n                    <p>{{ 'core.login.changepasswordreconnectinstructions' | translate }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-button class=\\\"ion-text-wrap ion-margin\\\" expand=\\\"block\\\" (click)=\\\"login()\\\">\\n                {{ 'core.login.reconnect' | translate }}\\n            </ion-button>\\n        </ng-container>\\n        <ion-item class=\\\"ion-text-wrap\\\">\\n            <ion-label>\\n                <p>{{ 'core.wanttochangesite' | translate }}</p>\\n            </ion-label>\\n        </ion-item>\\n        <ion-button class=\\\"ion-text-wrap ion-margin\\\" expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"logout()\\\">\\n            {{ logoutLabel | translate }}\\n        </ion-button>\\n    </ion-list>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreLoginChangePasswordPage } from './change-password';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreLoginChangePasswordPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreLoginChangePasswordPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreLoginChangePasswordPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy } from '@angular/core';\n\nimport { CoreSites } from '@services/sites';\nimport { CoreLoginHelper } from '@features/login/services/login-helper';\nimport { Translate } from '@singletons';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreUserSupport } from '@features/user/services/support';\n\n/**\n * Page that shows instructions to change the password.\n */\n@Component({\n    selector: 'page-core-login-change-password',\n    templateUrl: 'change-password.html',\n})\nexport class CoreLoginChangePasswordPage implements OnDestroy {\n\n    changingPassword = false;\n    logoutLabel: string;\n\n    protected urlLoadedObserver?: CoreEventObserver;\n    protected messageObserver?: CoreEventObserver;\n    protected browserClosedObserver?: CoreEventObserver;\n\n    constructor() {\n        this.logoutLabel = CoreLoginHelper.getLogoutLabel();\n    }\n\n    /**\n     * Show help modal.\n     */\n    showHelp(): void {\n        CoreUserSupport.showHelp(\n            Translate.instant('core.login.changepasswordhelp'),\n            Translate.instant('core.login.changepasswordsupportsubject'),\n        );\n    }\n\n    /**\n     * Open the change password page in a browser.\n     */\n    openChangePasswordPage(): void {\n        CoreLoginHelper.openInAppForEdit(\n            CoreSites.getCurrentSiteId(),\n            '/login/change_password.php',\n            undefined,\n            true,\n        );\n        this.changingPassword = true;\n        this.detectPasswordChanged();\n    }\n\n    /**\n     * Login the user.\n     */\n    login(): void {\n        CoreNavigator.navigateToSiteHome();\n        this.changingPassword = false;\n    }\n\n    /**\n     * Logout the user.\n     */\n    logout(): void {\n        CoreSites.logout();\n        this.changingPassword = false;\n    }\n\n    /**\n     * Try to detect if the user changed password in browser.\n     */\n    detectPasswordChanged(): void {\n        if (this.urlLoadedObserver) {\n            // Already listening (shouldn't happen).\n            return;\n        }\n\n        this.urlLoadedObserver = CoreEvents.on(CoreEvents.IAB_LOAD_STOP, (event) => {\n            if (event.url.match(/\\/login\\/change_password\\.php.*return=1/)) {\n                // Password has changed, close the IAB now.\n                CoreUtils.closeInAppBrowser();\n                this.login();\n\n                return;\n            }\n\n            if (!event.url.match(/\\/login\\/change_password\\.php/)) {\n                return;\n            }\n\n            // Use a script to check if the user changed the password, in some platforms we cannot tell using the URL.\n            CoreUtils.getInAppBrowserInstance()?.executeScript({\n                code: `\n                    if (\n                        document.querySelector('input[type=\"password\"]') === null &&\n                        document.querySelector('button[type=\"submit\"]') !== null\n                    ) {\n                        webkit.messageHandlers.cordova_iab.postMessage(JSON.stringify({ passwordChanged: true }));\n                    }\n                `,\n            });\n        });\n\n        this.messageObserver = CoreEvents.on(CoreEvents.IAB_MESSAGE, (data) => {\n            if (data.passwordChanged) {\n                CoreUtils.closeInAppBrowser();\n                this.login();\n            }\n        });\n\n        this.browserClosedObserver = CoreEvents.on(CoreEvents.IAB_EXIT, () => {\n            this.urlLoadedObserver?.off();\n            this.messageObserver?.off();\n            this.browserClosedObserver?.off();\n\n            delete this.urlLoadedObserver;\n            delete this.messageObserver;\n            delete this.browserClosedObserver;\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.urlLoadedObserver?.off();\n        this.messageObserver?.off();\n        this.browserClosedObserver?.off();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}