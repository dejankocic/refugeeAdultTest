{"version":3,"sources":["./src/addons/calendar/pages/settings/settings.html","./src/addons/calendar/pages/settings/settings.module.ts","./src/addons/calendar/pages/settings/settings.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,0RAA2N,wCAAwC,uKAAuK,wDAAwD,iLAAiL,oBAAoB,wGAAwG,E;;;;;;;;;;;;ACA9xB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEQ;AACc;AAEA;AACC;AAExD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAyB;KACvC;CACJ,CAAC;IAYW,+BAA+B,SAA/B,+BAA+B;CAAG;AAAlC,+BAA+B;IAV3C,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAgB;SACnB;QACD,YAAY,EAAE;YACV,mEAAyB;SAC5B;QACD,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;ACrC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAqC;AACrC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;AAEiB;AACC;AAIH;AAC2E;AAE3H;;GAEG;IAKU,yBAAyB,SAAzB,yBAAyB;;QAElC,qBAAgB,GAAG,EAAE,CAAC;IAkD1B,CAAC;IA9CG;;OAEG;IACG,QAAQ;;YACV,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAClC,CAAC;KAAA;IAED;;;;;OAKG;IACG,iBAAiB,CAAC,CAAQ;;;YAC5B,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC,wBAAwB,EAAE,CAAC;YAC7B,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,MAAM,YAAY,GAAG,MAAM,gEAAY,CAAC,WAAW,CAAuB;gBACtE,SAAS,EAAE,wIAAqC;gBAChD,cAAc,EAAE;oBACZ,YAAY,EAAE,IAAI,CAAC,WAAW;oBAC9B,eAAe,EAAE,wBAAwB;iBAC5C;gBACD,KAAK,EAAE,CAAC;aACX,CAAC,CAAC;YAEH,IAAI,YAAY,KAAK,SAAS,EAAE;gBAC5B,iBAAiB;gBACjB,OAAO;aACV;YAED,MAAM,oFAAa,CAAC,0BAA0B,OAAC,YAAY,CAAC,UAAU,mCAAI,2FAAoB,CAAC,QAAQ,CAAC,CAAC;YACzG,IAAI,CAAC,sBAAsB,EAAE,CAAC;;KACjC;IAED;;OAEG;IACG,sBAAsB;;YACxB,IAAI,CAAC,WAAW,GAAG,MAAM,oFAAa,CAAC,0BAA0B,EAAE,CAAC;YAEpE,MAAM,WAAW,GAAG,2FAAoB,CAAC,4BAA4B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxF,IAAI,CAAC,gBAAgB,GAAG,oFAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;QACjG,CAAC;KAAA;CAEJ;AApDY,yBAAyB;IAJrC,+DAAS,CAAC;QACP,QAAQ,EAAE,8BAA8B;QACxC,kOAA4B;KAC/B,CAAC;GACW,yBAAyB,CAoDrC;AApDqC","file":"addons-calendar-pages-settings-settings-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>{{ 'core.settings.settings' | translate }}</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-list>\\n        <ion-item *ngIf=\\\"defaultTimeLabel\\\">\\n            <ion-label>{{ 'addon.calendar.defaultnotificationtime' | translate }}</ion-label>\\n            <ion-select [(ngModel)]=\\\"defaultTimeLabel\\\" (click)=\\\"changeDefaultTime($event)\\\">\\n                <ion-select-option [value]=\\\"defaultTimeLabel\\\">{{ defaultTimeLabel }}</ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n    </ion-list>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddonCalendarSettingsPage } from './settings';\nimport { CoreSharedModule } from '@/core/shared.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonCalendarSettingsPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonCalendarSettingsPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonCalendarSettingsPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport {\n    CoreReminders,\n    CoreRemindersService,\n} from '@features/reminders/services/reminders';\nimport { CoreRemindersSetReminderMenuComponent } from '@features/reminders/components/set-reminder-menu/set-reminder-menu';\n\n/**\n * Page that displays the calendar settings.\n */\n@Component({\n    selector: 'page-addon-calendar-settings',\n    templateUrl: 'settings.html',\n})\nexport class AddonCalendarSettingsPage implements OnInit {\n\n    defaultTimeLabel = '';\n\n    protected defaultTime?: number;\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        this.updateDefaultTimeLabel();\n    }\n\n    /**\n     * Change default time.\n     *\n     * @param e Event.\n     * @returns Promise resolved when done.\n     */\n    async changeDefaultTime(e: Event): Promise<void> {\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        e.preventDefault();\n\n        const reminderTime = await CoreDomUtils.openPopover<{timeBefore: number}>({\n            component: CoreRemindersSetReminderMenuComponent,\n            componentProps: {\n                initialValue: this.defaultTime,\n                noReminderLabel: 'core.settings.disabled',\n            },\n            event: e,\n        });\n\n        if (reminderTime === undefined) {\n            // User canceled.\n            return;\n        }\n\n        await CoreReminders.setDefaultNotificationTime(reminderTime.timeBefore ?? CoreRemindersService.DISABLED);\n        this.updateDefaultTimeLabel();\n    }\n\n    /**\n     * Update default time label.\n     */\n    async updateDefaultTimeLabel(): Promise<void> {\n        this.defaultTime = await CoreReminders.getDefaultNotificationTime();\n\n        const defaultTime = CoreRemindersService.convertSecondsToValueAndUnit(this.defaultTime);\n        this.defaultTimeLabel = CoreReminders.getUnitValueLabel(defaultTime.value, defaultTime.unit);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}