{"version":3,"sources":["./src/addons/mod/lesson/pages/player/player.html","./src/addons/mod/quiz/pages/player/player.html","./src/addons/mod/lesson/pages/player/player.module.ts","./src/addons/mod/lesson/pages/player/player.page.ts","./src/addons/mod/lesson/pages/player/player.scss","./src/addons/mod/quiz/classes/auto-save.ts","./src/addons/mod/quiz/pages/player/player.module.ts","./src/addons/mod/quiz/pages/player/player.page.ts","./src/addons/mod/quiz/pages/player/player.scss"],"names":[],"mappings":"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","file":"pages-player-player-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>\\n                <core-format-text [text]=\\\"title\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n                </core-format-text>\\n            </h1>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" *ngIf=\\\"displayMenu || mediaFile\\\" [attr.aria-label]=\\\"'addon.mod_lesson.lessonmenu' | translate\\\"\\n                (click)=\\\"showMenu()\\\">\\n                <ion-icon name=\\\"fas-bookmark\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"limited-width\\\">\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <!-- Info messages. Only show the first one. -->\\n        <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"lesson && messages?.length\\\">\\n            <ion-item class=\\\"ion-text-wrap\\\">\\n                <ion-icon name=\\\"fas-info-circle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                <ion-label>{{ messages[0].message }}</ion-label>\\n            </ion-item>\\n        </ion-card>\\n\\n        <div *ngIf=\\\"lesson\\\" [ngClass]='{\\\"addon-mod_lesson-slideshow\\\": lesson.slideshow}'\\n            [ngStyle]=\\\"{'width': lessonWidth, 'height': lessonHeight}\\\">\\n\\n            <core-timer *ngIf=\\\"endTime\\\" [endTime]=\\\"endTime\\\" (finished)=\\\"timeUp()\\\" [timeLeftClassThreshold]=\\\"-1\\\"\\n                [timerText]=\\\"'addon.mod_lesson.timeremaining' | translate\\\">\\n            </core-timer>\\n\\n            <!-- Retake and ongoing score. -->\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"showRetake && !eolData && !processData\\\">\\n                <ion-label>\\n                    <p>{{ 'addon.mod_lesson.attempt' | translate:{$a: retake} }}</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item *ngIf=\\\"pageData && pageData.ongoingscore && !eolData && !processData\\\"\\n                class=\\\"addon-mod_lesson-ongoingscore ion-text-wrap\\\">\\n                <ion-label>{{ pageData.ongoingscore }}</ion-label>\\n            </ion-item>\\n\\n            <!-- Page content. -->\\n            <ion-card *ngIf=\\\"!eolData && !processData\\\">\\n                <!-- Content page. -->\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"!question && pageContent\\\">\\n                    <ion-label>\\n                        <core-format-text [component]=\\\"component\\\" [componentId]=\\\"lesson.coursemodule\\\" [text]=\\\"pageContent\\\"\\n                            contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n                        </core-format-text>\\n                    </ion-label>\\n                </ion-item>\\n\\n                <!-- Question page. -->\\n                <!-- We need to set ngIf loaded to make formGroup directive restart every time a page changes, see MOBILE-2540. -->\\n                <form *ngIf=\\\"question && loaded\\\" [formGroup]=\\\"questionForm\\\" #questionFormEl (ngSubmit)=\\\"submitQuestion($event)\\\">\\n\\n                    <ion-item-divider class=\\\"ion-text-wrap\\\" *ngIf=\\\"pageContent\\\">\\n                        <ion-label>\\n                            <h2>\\n                                <core-format-text [component]=\\\"component\\\" [componentId]=\\\"lesson?.coursemodule\\\" [text]=\\\"pageContent\\\"\\n                                    contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n                                </core-format-text>\\n                            </h2>\\n                        </ion-label>\\n                    </ion-item-divider>\\n\\n                    <!-- Render a different input depending on the type of the question. -->\\n                    <ng-container [ngSwitch]=\\\"question.template\\\">\\n\\n                        <!-- Short answer. -->\\n                        <ion-item class=\\\"ion-text-wrap\\\" *ngSwitchCase=\\\"'shortanswer'\\\">\\n                            <ion-label class=\\\"sr-only\\\" stacked></ion-label>\\n                            <ion-input [type]=\\\"question.input!.type\\\" placeholder=\\\"{{ 'addon.mod_lesson.youranswer' | translate }}\\\"\\n                                [id]=\\\"question.input!.id\\\" [formControlName]=\\\"question.input!.name\\\" autocorrect=\\\"off\\\"\\n                                [maxlength]=\\\"question.input!.maxlength\\\">\\n                            </ion-input>\\n                        </ion-item>\\n\\n                        <!-- Essay. -->\\n                        <ng-container *ngSwitchCase=\\\"'essay'\\\">\\n                            <ion-item *ngIf=\\\"question.textarea\\\">\\n                                <ion-label class=\\\"sr-only\\\">{{ 'core.content' | translate }}</ion-label>\\n                                <core-rich-text-editor placeholder=\\\"{{ 'addon.mod_lesson.youranswer' | translate }}\\\"\\n                                    [control]=\\\"question.control\\\" [component]=\\\"component\\\" [componentId]=\\\"lesson?.coursemodule\\\"\\n                                    [autoSave]=\\\"true\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\"\\n                                    elementId=\\\"answer_editor\\\">\\n                                </core-rich-text-editor>\\n                            </ion-item>\\n                            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"!question.textarea && question.useranswer\\\">\\n                                <ion-label>\\n                                    <h3 class=\\\"item-heading\\\">{{ 'addon.mod_lesson.youranswer' | translate }}</h3>\\n                                    <p>\\n                                        <core-format-text [component]=\\\"component\\\" [componentId]=\\\"lesson?.coursemodule\\\"\\n                                            [text]=\\\"question.useranswer\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\"\\n                                            [courseId]=\\\"courseId\\\">\\n                                        </core-format-text>\\n                                    </p>\\n                                </ion-label>\\n                            </ion-item>\\n                        </ng-container>\\n\\n                        <!-- Multichoice. -->\\n                        <ng-container *ngSwitchCase=\\\"'multichoice'\\\">\\n                            <!-- Single choice. -->\\n                            <ion-radio-group *ngIf=\\\"!question.multi\\\" [formControlName]=\\\"question.controlName\\\">\\n                                <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let option of question.options\\\">\\n                                    <ion-label>\\n                                        <core-format-text [component]=\\\"component\\\" [componentId]=\\\"lesson.coursemodule\\\" [text]=\\\"option.text\\\"\\n                                            contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n                                        </core-format-text>\\n                                    </ion-label>\\n                                    <ion-radio slot=\\\"end\\\" [id]=\\\"option.id\\\" [value]=\\\"option.value\\\" [disabled]=\\\"option.disabled\\\">\\n                                    </ion-radio>\\n                                </ion-item>\\n                            </ion-radio-group>\\n\\n                            <!-- Multiple choice. -->\\n                            <ng-container *ngIf=\\\"question.multi\\\">\\n                                <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let option of question.options\\\">\\n                                    <ion-label>\\n                                        <core-format-text [component]=\\\"component\\\" [componentId]=\\\"lesson?.coursemodule\\\" [text]=\\\"option.text\\\"\\n                                            contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n                                        </core-format-text>\\n                                    </ion-label>\\n                                    <ion-checkbox [id]=\\\"option.id\\\" [formControlName]=\\\"option.name\\\" slot=\\\"end\\\"></ion-checkbox>\\n                                </ion-item>\\n                            </ng-container>\\n                        </ng-container>\\n\\n                        <!-- Matching. -->\\n                        <ng-container *ngSwitchCase=\\\"'matching'\\\">\\n                            <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let row of question.rows\\\">\\n                                <ion-label>\\n                                    <p>\\n                                        <core-format-text id=\\\"addon-mod_lesson-matching-{{row.id}}\\\" [component]=\\\"component\\\"\\n                                            [componentId]=\\\"lesson?.coursemodule\\\" [text]=\\\"row.text\\\" contextLevel=\\\"module\\\"\\n                                            [contextInstanceId]=\\\"lesson?.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n                                        </core-format-text>\\n                                    </p>\\n                                </ion-label>\\n                                <ion-select [id]=\\\"row.id\\\" [formControlName]=\\\"row.name\\\" interface=\\\"action-sheet\\\"\\n                                    [attr.aria-labelledby]=\\\"'addon-mod_lesson-matching-' + row.id\\\">\\n                                    <ion-select-option *ngFor=\\\"let option of row.options\\\" [value]=\\\"option.value\\\">\\n                                        {{option.label}}\\n                                    </ion-select-option>\\n                                </ion-select>\\n                            </ion-item>\\n                        </ng-container>\\n                    </ng-container>\\n\\n                    <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-text-wrap ion-margin button-no-uppercase\\\">\\n                        {{ question.submitLabel }}\\n                    </ion-button>\\n                    <!-- Remove this once Ionic fixes this bug: https://github.com/ionic-team/ionic-framework/issues/19368 -->\\n                    <input type=\\\"submit\\\" class=\\\"core-submit-hidden-enter\\\" />\\n                </form>\\n            </ion-card>\\n\\n            <!-- Page buttons and progress. -->\\n            <ion-list *ngIf=\\\"!eolData && !processData\\\">\\n                <ion-grid *ngIf=\\\"pageButtons?.length\\\" class=\\\"ion-text-wrap addon-mod_lesson-pagebuttons\\\">\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\n                        <ion-col *ngFor=\\\"let button of pageButtons\\\" size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"3\\\" col-xl>\\n                            <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" [id]=\\\"button.id\\\" (click)=\\\"buttonClicked(button.data)\\\"\\n                                class=\\\"ion-text-wrap button-no-uppercase\\\">\\n                                {{ button.content }}\\n                            </ion-button>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"lesson?.progressbar && !canManage && pageData\\\">\\n                    <ion-label>\\n                        <span id=\\\"addon-mod_lesson-{{cmId}}-progress\\\">\\n                            {{ 'addon.mod_lesson.progresscompleted' | translate:{$a: pageData.progress} }}\\n                        </span>\\n                        <core-progress-bar [progress]=\\\"pageData.progress\\\" ariaDescribedBy=\\\"addon-mod_lesson-{{cmId}}-progress\\\">\\n                        </core-progress-bar>\\n                    </ion-label>\\n                </ion-item>\\n                <ion-card class=\\\"core-info-card\\\" *ngIf=\\\"lesson?.progressbar && canManage\\\">\\n                    <ion-item class=\\\"ion-text-wrap\\\">\\n                        <ion-icon name=\\\"fas-info-circle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                        <ion-label>{{ 'addon.mod_lesson.progressbarteacherwarning2' | translate }}</ion-label>\\n                    </ion-item>\\n                </ion-card>\\n            </ion-list>\\n\\n            <!-- End of lesson reached. -->\\n            <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"eolData && !processData && eolData.offline?.value\\\">\\n                <ion-item>\\n                    <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                    <ion-label>{{ 'addon.mod_lesson.finishretakeoffline' | translate }}</ion-label>\\n                </ion-item>\\n            </ion-card>\\n\\n            <ion-card *ngIf=\\\"eolData && !processData\\\">\\n\\n                <ion-card-header class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.gradelesson\\\">\\n                    <ion-card-title>{{ 'addon.mod_lesson.congratulations' | translate }}</ion-card-title>\\n                </ion-card-header>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.notenoughtimespent\\\">\\n                    <ion-label>{{ eolData.notenoughtimespent.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.numberofpagesviewed\\\">\\n                    <ion-label>{{ eolData.numberofpagesviewed.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.youshouldview\\\">\\n                    <ion-label>{{ eolData.youshouldview.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.numberofcorrectanswers\\\">\\n                    <ion-label>{{ eolData.numberofcorrectanswers.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.displayscorewithessays\\\">\\n                    <ion-label [innerHTML]=\\\"eolData.displayscorewithessays.message\\\"></ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"!eolData.displayscorewithessays && eolData.displayscorewithoutessays\\\">\\n                    <ion-label>{{ eolData.displayscorewithoutessays.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.yourcurrentgradeisoutof\\\">\\n                    <ion-label>{{ eolData.yourcurrentgradeisoutof.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.eolstudentoutoftimenoanswers\\\">\\n                    <ion-label>{{ eolData.eolstudentoutoftimenoanswers.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.welldone\\\">\\n                    <ion-label>{{ eolData.welldone.message }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"lesson.progressbar && eolData.progresscompleted\\\">\\n                    <ion-label>\\n                        <span id=\\\"addon-mod_lesson-{{cmId}}-progress-end\\\">\\n                            {{ 'addon.mod_lesson.progresscompleted' | translate:{$a: eolData.progresscompleted.value} }}\\n                        </span>\\n                        <core-progress-bar [progress]=\\\"eolData.progresscompleted.value\\\"\\n                            ariaDescribedBy=\\\"addon-mod_lesson-{{cmId}}-progress-end\\\">\\n                        </core-progress-bar>\\n                    </ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.displayofgrade\\\">\\n                    <ion-label>{{ eolData.displayofgrade.message }}</ion-label>\\n                </ion-item>\\n                <ion-button *ngIf=\\\"eolData.reviewlesson\\\" expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin button-no-uppercase\\\"\\n                    (click)=\\\"reviewLesson(reviewPageId!)\\\">\\n                    {{ 'addon.mod_lesson.reviewlesson' | translate }}\\n                </ion-button>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"eolData.modattemptsnoteacher\\\">\\n                    <ion-label>{{ eolData.modattemptsnoteacher.message }}</ion-label>\\n                </ion-item>\\n                <!-- If activity link was successfully formatted, render the button. -->\\n                <ion-button *ngIf=\\\"activityLink && activityLink.formatted\\\" expand=\\\"block\\\" fill=\\\"outline\\\" [href]=\\\"activityLink.href\\\"\\n                    core-link [capture]=\\\"true\\\" class=\\\"ion-text-wrap ion-margin button-no-uppercase\\\">\\n                    <core-format-text [text]=\\\"activityLink.label\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\"\\n                        [courseId]=\\\"courseId\\\">\\n                    </core-format-text>\\n                </ion-button>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"activityLink && !activityLink.formatted\\\">\\n                    <!-- Activity link wasn't formatted, render the original link. -->\\n                    <ion-label>\\n                        <core-format-text [text]=\\\"activityLink.label\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\"\\n                            [courseId]=\\\"courseId\\\">\\n                        </core-format-text>\\n                    </ion-label>\\n                </ion-item>\\n            </ion-card>\\n\\n            <!-- Feedback returned when processing an action. -->\\n            <ion-list *ngIf=\\\"processData\\\">\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"processData.ongoingscore && !processData.reviewmode\\\">\\n                    <ion-label>{{ processData.ongoingscore }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"!processData.reviewmode || review\\\">\\n                    <ion-label>\\n                        <div *ngIf=\\\"!processData.reviewmode\\\">\\n                            <core-format-text [component]=\\\"component\\\" [componentId]=\\\"lesson?.coursemodule\\\" [text]=\\\"processData.feedback\\\"\\n                                contextLevel=\\\"module\\\" [contextInstanceId]=\\\"lesson?.coursemodule\\\" [courseId]=\\\"courseId\\\">\\n                            </core-format-text>\\n                        </div>\\n                        <div *ngIf=\\\"review\\\">\\n                            <p>{{ 'addon.mod_lesson.gotoendoflesson' | translate }}</p>\\n                            <p>{{ 'addon.mod_lesson.or' | translate }}</p>\\n                            <p>{{ 'addon.mod_lesson.continuetonextpage' | translate }}</p>\\n                        </div>\\n                    </ion-label>\\n                </ion-item>\\n\\n                <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin\\\" *ngIf=\\\"review\\\" (click)=\\\"changePage(LESSON_EOL)\\\">\\n                    {{ 'addon.mod_lesson.finish' | translate }}\\n                </ion-button>\\n                <ion-button expand=\\\"block\\\" class=\\\"ion-text-wrap ion-margin\\\" fill=\\\"outline\\\" *ngFor=\\\"let button of processDataButtons\\\"\\n                    (click)=\\\"changePage(button.pageId, true)\\\">\\n                    {{ button.label | translate }}\\n                </ion-button>\\n            </ion-list>\\n        </div>\\n    </core-loading>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>\\n                <core-format-text *ngIf=\\\"quiz\\\" [text]=\\\"quiz.name\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"quiz.coursemodule\\\"\\n                    [courseId]=\\\"courseId\\\">\\n                </core-format-text>\\n            </h1>\\n        </ion-title>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" id=\\\"addon-mod_quiz-connection-error-button\\\" [hidden]=\\\"!autoSaveError\\\"\\n                (click)=\\\"showConnectionError($event)\\\" [attr.aria-label]=\\\"'addon.mod_quiz.connectionerror' | translate\\\"\\n                aria-haspopup=\\\"dialog\\\">\\n                <ion-icon name=\\\"fas-exclamation-circle\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button *ngIf=\\\"navigation.length\\\" [attr.aria-label]=\\\"'addon.mod_quiz.opentoc' | translate\\\" (click)=\\\"openNavigation()\\\">\\n                <ion-icon name=\\\"fas-bookmark\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n    <!-- Navigation arrows and time left. -->\\n    <ion-toolbar *ngIf=\\\"loaded && endTime && questions.length && !quizAborted && !showSummary\\\" color=\\\"light\\\">\\n        <ion-title>\\n            <core-timer [endTime]=\\\"endTime\\\" (finished)=\\\"timeUp()\\\" [timerText]=\\\"'addon.mod_quiz.timeleft' | translate\\\" [align]=\\\"'center'\\\">\\n            </core-timer>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"limited-width\\\">\\n    <core-loading [hideUntil]=\\\"loaded\\\" class=\\\"has-spacer\\\">\\n        <!-- Button to start attempting. -->\\n        <ion-button *ngIf=\\\"!attempt\\\" expand=\\\"block\\\" class=\\\"ion-margin\\\" (click)=\\\"start()\\\">\\n            {{ 'addon.mod_quiz.startattempt' | translate }}\\n        </ion-button>\\n\\n        <!-- Questions -->\\n        <form name=\\\"addon-mod_quiz-player-form\\\" *ngIf=\\\"questions.length && !quizAborted && !showSummary\\\" #quizForm>\\n            <div *ngFor=\\\"let question of questions\\\">\\n                <ion-card id=\\\"addon-mod_quiz-question-{{question.slot}}\\\">\\n                    <!-- \\\"Header\\\" of the question. -->\\n                    <ion-item-divider>\\n                        <ion-label>\\n                            <h2 *ngIf=\\\"question.number\\\" class=\\\"inline\\\">\\n                                {{ 'core.question.questionno' | translate:{$a: question.number} }}\\n                            </h2>\\n                            <h2 *ngIf=\\\"!question.number\\\" class=\\\"inline\\\">{{ 'core.question.information' | translate }}</h2>\\n                        </ion-label>\\n                        <div *ngIf=\\\"question.status || question.readableMark\\\" slot=\\\"end\\\"\\n                            class=\\\"ion-text-wrap ion-margin-horizontal addon-mod_quiz-question-note\\\">\\n                            <p *ngIf=\\\"question.status\\\" class=\\\"block\\\">{{question.status}}</p>\\n                            <p *ngIf=\\\"question.readableMark\\\" [innerHTML]=\\\"question.readableMark\\\"></p>\\n                        </div>\\n                    </ion-item-divider>\\n\\n                    <!-- Body of the question. -->\\n                    <core-question class=\\\"ion-text-wrap\\\" [question]=\\\"question\\\" [component]=\\\"component\\\" [componentId]=\\\"cmId\\\"\\n                        [attemptId]=\\\"attempt!.id\\\" [usageId]=\\\"attempt!.uniqueid\\\" [offlineEnabled]=\\\"offline\\\" contextLevel=\\\"module\\\"\\n                        [contextInstanceId]=\\\"cmId\\\" [courseId]=\\\"courseId\\\" [preferredBehaviour]=\\\"quiz!.preferredbehaviour\\\" [review]=\\\"false\\\"\\n                        (onAbort)=\\\"abortQuiz()\\\" (buttonClicked)=\\\"behaviourButtonClicked($event)\\\">\\n                    </core-question>\\n                </ion-card>\\n            </div>\\n        </form>\\n\\n        <!-- Go to next or previous page. -->\\n        <ion-row *ngIf=\\\"questions.length && !quizAborted && !showSummary\\\" class=\\\"spacer-top\\\">\\n            <ion-col *ngIf=\\\"previousPage >= 0\\\">\\n                <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" (click)=\\\"changePage(previousPage)\\\" class=\\\"ion-text-wrap\\\">\\n                    <ion-icon name=\\\"fas-chevron-left\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                    {{ 'core.previous' | translate }}\\n                </ion-button>\\n            </ion-col>\\n            <ion-col *ngIf=\\\"nextPage >= -1\\\">\\n                <ion-button expand=\\\"block\\\" (click)=\\\"changePage(nextPage)\\\" class=\\\"ion-text-wrap\\\" *ngIf=\\\"nextPage > 0\\\">\\n                    {{ 'core.next' | translate }}\\n                    <ion-icon name=\\\"fas-chevron-right\\\" slot=\\\"end\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n                <ion-button expand=\\\"block\\\" (click)=\\\"changePage(nextPage)\\\" class=\\\"ion-text-wrap\\\" *ngIf=\\\"nextPage == -1\\\">\\n                    {{ 'core.submit' | translate }}\\n                </ion-button>\\n            </ion-col>\\n        </ion-row>\\n\\n        <!-- Summary -->\\n        <ion-card *ngIf=\\\"!quizAborted && showSummary && summaryQuestions.length\\\" class=\\\"addon-mod_quiz-table\\\">\\n            <ion-card-header class=\\\"ion-text-wrap\\\">\\n                <ion-card-title>{{ 'addon.mod_quiz.summaryofattempt' | translate }}</ion-card-title>\\n            </ion-card-header>\\n\\n            <!-- \\\"Header\\\" of the summary table. -->\\n            <ion-item class=\\\"ion-text-wrap\\\">\\n                <ion-label>\\n                    <ion-row class=\\\"ion-align-items-center\\\">\\n                        <ion-col size=\\\"3\\\" class=\\\"ion-text-center ion-hide-md-down\\\">\\n                            <strong>{{ 'addon.mod_quiz.question' | translate }}</strong>\\n                        </ion-col>\\n                        <ion-col size=\\\"3\\\" class=\\\"ion-text-center ion-hide-md-up\\\"><strong>#</strong></ion-col>\\n                        <ion-col size=\\\"9\\\" class=\\\"ion-text-center\\\">\\n                            <strong>{{ 'addon.mod_quiz.status' | translate }}</strong>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-label>\\n            </ion-item>\\n\\n            <!-- List of questions of the summary table. -->\\n            <ng-container *ngFor=\\\"let question of summaryQuestions\\\">\\n                <ion-item *ngIf=\\\"question.number\\\" (click)=\\\"changePage(question.page, false, question.slot)\\\"\\n                    [attr.aria-label]=\\\"'core.question.questionno' | translate:{$a: question.number}\\\" [detail]=\\\"!isSequential && canReturn\\\"\\n                    [button]=\\\"!isSequential && canReturn\\\">\\n                    <ion-label>\\n                        <ion-row class=\\\"ion-align-items-center\\\">\\n                            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">{{ question.number }}</ion-col>\\n                            <ion-col size=\\\"9\\\" class=\\\"ion-text-center ion-text-wrap\\\">{{ question.status }}</ion-col>\\n                        </ion-row>\\n                    </ion-label>\\n                </ion-item>\\n            </ng-container>\\n\\n            <!-- Due date warning. -->\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"dueDateWarning\\\">\\n                <ion-label>{{ dueDateWarning }}</ion-label>\\n            </ion-item>\\n\\n            <!-- Time left (if quiz is timed). -->\\n            <core-timer *ngIf=\\\"endTime\\\" [endTime]=\\\"endTime\\\" (finished)=\\\"timeUp()\\\" [timerText]=\\\"'addon.mod_quiz.timeleft' | translate\\\">\\n            </core-timer>\\n\\n            <!-- List of messages explaining why the quiz cannot be submitted. -->\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"preventSubmitMessages.length\\\">\\n                <ion-label>\\n                    <h3 class=\\\"item-heading\\\">{{ 'addon.mod_quiz.cannotsubmitquizdueto' | translate }}</h3>\\n                    <p *ngFor=\\\"let message of preventSubmitMessages\\\">{{message}}</p>\\n                </ion-label>\\n            </ion-item>\\n        </ion-card>\\n\\n        <!-- Quiz aborted -->\\n        <ion-card *ngIf=\\\"attempt && ((!questions.length && !showSummary) || quizAborted)\\\">\\n            <ion-item class=\\\"ion-text-wrap\\\">\\n                <ion-label>{{ 'addon.mod_quiz.errorparsequestions' | translate }}</ion-label>\\n            </ion-item>\\n            <ion-button *ngIf=\\\"canReturn\\\" expand=\\\"block\\\" class=\\\"ion-margin ion-text-wrap\\\" fill=\\\"outline\\\"\\n                (click)=\\\"changePage(attempt!.currentpage!)\\\">\\n                {{ 'addon.mod_quiz.returnattempt' | translate }}\\n            </ion-button>\\n        </ion-card>\\n\\n        <div collapsible-footer appearOnBottom *ngIf=\\\"!quizAborted && showSummary && summaryQuestions.length && loaded\\\" slot=\\\"fixed\\\">\\n            <div class=\\\"list-item-limited-width\\\">\\n                <ion-button *ngIf=\\\"preventSubmitMessages.length\\\" expand=\\\"block\\\" class=\\\"ion-margin ion-text-wrap\\\" [href]=\\\"moduleUrl\\\"\\n                    core-link [showBrowserWarning]=\\\"false\\\">\\n                    {{ 'core.openinbrowser' | translate }}\\n                    <ion-icon name=\\\"fas-external-link-alt\\\" slot=\\\"end\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n\\n                <!-- Button to submit the quiz. -->\\n                <ion-button *ngIf=\\\"!attempt!.finishedOffline && !preventSubmitMessages.length\\\" expand=\\\"block\\\"\\n                    class=\\\"ion-margin ion-text-wrap\\\" (click)=\\\"finishAttempt(true)\\\">\\n                    {{ 'addon.mod_quiz.submitallandfinish' | translate }}\\n                </ion-button>\\n            </div>\\n        </div>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonModLessonPlayerPage } from './player.page';\nimport { CoreEditorComponentsModule } from '@features/editor/components/components.module';\nimport { CanLeaveGuard } from '@guards/can-leave';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonModLessonPlayerPage,\n        canDeactivate: [CanLeaveGuard],\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreEditorComponentsModule,\n    ],\n    declarations: [\n        AddonModLessonPlayerPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonModLessonPlayerPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { IonContent } from '@ionic/angular';\n\nimport { CoreError } from '@classes/errors/error';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreNetwork } from '@services/network';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites, CoreSitesCommonWSOptions, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUrlUtils } from '@services/utils/url';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreWSExternalFile } from '@services/ws';\nimport { ModalController, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModLessonMenuModalPage } from '../../components/menu-modal/menu-modal';\nimport {\n    AddonModLesson,\n    AddonModLessonEOLPageDataEntry,\n    AddonModLessonFinishRetakeResponse,\n    AddonModLessonGetAccessInformationWSResponse,\n    AddonModLessonGetPageDataWSResponse,\n    AddonModLessonGetPagesPageWSData,\n    AddonModLessonLaunchAttemptWSResponse,\n    AddonModLessonLessonWSData,\n    AddonModLessonMessageWSData,\n    AddonModLessonPageWSData,\n    AddonModLessonPossibleJumps,\n    AddonModLessonProcessPageOptions,\n    AddonModLessonProcessPageResponse,\n    AddonModLessonProvider,\n} from '../../services/lesson';\nimport {\n    AddonModLessonActivityLink,\n    AddonModLessonHelper,\n    AddonModLessonPageButton,\n    AddonModLessonQuestion,\n} from '../../services/lesson-helper';\nimport { AddonModLessonOffline } from '../../services/lesson-offline';\nimport { AddonModLessonSync } from '../../services/lesson-sync';\nimport { CoreFormFields, CoreForms } from '@singletons/form';\n\n/**\n * Page that allows attempting and reviewing a lesson.\n */\n@Component({\n    selector: 'page-addon-mod-lesson-player',\n    templateUrl: 'player.html',\n    styleUrls: ['player.scss'],\n})\nexport class AddonModLessonPlayerPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content?: IonContent;\n    @ViewChild('questionFormEl') formElement?: ElementRef;\n\n    component = AddonModLessonProvider.COMPONENT;\n    readonly LESSON_EOL = AddonModLessonProvider.LESSON_EOL;\n    questionForm?: FormGroup; // The FormGroup for question pages.\n    title?: string; // The page title.\n    lesson?: AddonModLessonLessonWSData; // The lesson object.\n    currentPage?: number; // Current page being viewed.\n    review?: boolean; // Whether the user is reviewing.\n    messages: AddonModLessonMessageWSData[] = []; // Messages to display to the user.\n    canManage?: boolean; // Whether the user can manage the lesson.\n    retake?: number; // Current retake number.\n    showRetake?: boolean; // Whether the retake number needs to be displayed.\n    lessonWidth?: string; // Width of the lesson (if slideshow mode).\n    lessonHeight?: string; // Height of the lesson (if slideshow mode).\n    endTime?: number; // End time of the lesson if it's timed.\n    pageData?: AddonModLessonGetPageDataWSResponse; // Current page data.\n    pageContent?: string; // Current page contents.\n    pageButtons?: AddonModLessonPageButton[]; // List of buttons of the current page.\n    question?: AddonModLessonQuestion; // Question of the current page (if it's a question page).\n    eolData?: Record<string, AddonModLessonEOLPageDataEntry>; // Data for EOL page (if current page is EOL).\n    processData?: AddonModLessonProcessPageResponse; // Data to display after processing a page.\n    processDataButtons: ProcessDataButton[] = []; // Buttons to display after processing a page.\n    loaded?: boolean; // Whether data has been loaded.\n    displayMenu?: boolean; // Whether the lesson menu should be displayed.\n    originalData?: CoreFormFields; // Original question data. It is used to check if data has changed.\n    reviewPageId?: number; // Page to open if the user wants to review the attempt.\n    courseId!: number; // The course ID the lesson belongs to.\n    lessonPages?: AddonModLessonPageWSData[]; // Lesson pages (for the lesson menu).\n    loadingMenu?: boolean; // Whether the lesson menu is being loaded.\n    mediaFile?: CoreWSExternalFile; // Media file of the lesson.\n    activityLink?: AddonModLessonActivityLink; // Next activity link data.\n    cmId!: number; // Course module ID.\n\n    protected password?: string; // Lesson password (if any).\n    protected forceLeave = false; // If true, don't perform any check when leaving the view.\n    protected offline?: boolean; // Whether we are in offline mode.\n    protected accessInfo?: AddonModLessonGetAccessInformationWSResponse; // Lesson access info.\n    protected jumps?: AddonModLessonPossibleJumps; // All possible jumps.\n    protected firstPageLoaded?: boolean; // Whether the first page has been loaded.\n    protected retakeToReview?: number; // Retake to review.\n    protected menuShown = false; // Whether menu is shown.\n\n    constructor(\n        protected changeDetector: ChangeDetectorRef,\n        protected formBuilder: FormBuilder,\n    ) {\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.password = CoreNavigator.getRouteParam('password');\n            this.review = !!CoreNavigator.getRouteBooleanParam('review');\n            this.currentPage = CoreNavigator.getRouteNumberParam('pageId');\n            this.retakeToReview = CoreNavigator.getRouteNumberParam('retake');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        try {\n            // Fetch the Lesson data.\n            const success = await this.fetchLessonData();\n            if (success) {\n                // Review data loaded or new retake started, remove any retake being finished in sync.\n                AddonModLessonSync.deleteRetakeFinishedInSync(this.lesson!.id);\n            }\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        if (this.lesson) {\n            // Unblock the lesson so it can be synced.\n            CoreSync.unblockOperation(this.component, this.lesson.id);\n        }\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (this.forceLeave || !this.questionForm) {\n            return true;\n        }\n\n        if (this.question && !this.eolData && !this.processData && this.originalData) {\n            // Question shown. Check if there is any change.\n            if (!CoreUtils.basicLeftCompare(this.questionForm.getRawValue(), this.originalData, 3)) {\n                await CoreDomUtils.showConfirm(Translate.instant('core.confirmcanceledit'));\n            }\n        }\n\n        CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n\n        return true;\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        if (this.menuShown) {\n            ModalController.dismiss();\n        }\n    }\n\n    /**\n     * A button was clicked.\n     *\n     * @param data Button data.\n     */\n    buttonClicked(data: Record<string, string>): void {\n        this.processPage(data);\n    }\n\n    /**\n     * Call a function and go offline if allowed and the call fails.\n     *\n     * @param func Function to call.\n     * @param options Options passed to the function.\n     * @returns Promise resolved in success, rejected otherwise.\n     */\n    protected async callFunction<T>(func: () => Promise<T>, options: CommonOptions): Promise<T> {\n        try {\n            return await func();\n        } catch (error) {\n            if (this.offline || this.review || !AddonModLesson.isLessonOffline(this.lesson!)) {\n                // Already offline or not allowed.\n                throw error;\n            }\n\n            if (CoreUtils.isWebServiceError(error)) {\n                // WebService returned an error, cannot perform the action.\n                throw error;\n            }\n\n            // Go offline and retry.\n            this.offline = true;\n\n            // Get the possible jumps now.\n            this.jumps = await AddonModLesson.getPagesPossibleJumps(this.lesson!.id, {\n                cmId: this.cmId,\n                readingStrategy: CoreSitesReadingStrategy.PREFER_CACHE,\n            });\n\n            // Call the function again with offline mode and the new jumps.\n            options.readingStrategy = CoreSitesReadingStrategy.PREFER_CACHE;\n            options.jumps = this.jumps;\n            options.offline = true;\n\n            return func();\n        }\n    }\n\n    /**\n     * Change the page from menu or when continuing from a feedback page.\n     *\n     * @param pageId Page to load.\n     * @param ignoreCurrent If true, allow loading current page.\n     * @returns Promise resolved when done.\n     */\n    async changePage(pageId: number, ignoreCurrent?: boolean): Promise<void> {\n        if (!ignoreCurrent && !this.eolData && this.currentPage == pageId) {\n            // Page already loaded, stop.\n            return;\n        }\n\n        this.loaded = true;\n        this.messages = [];\n\n        try {\n            await this.loadPage(pageId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading page');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Get the lesson data and load the page.\n     *\n     * @returns Promise resolved with true if success, resolved with false otherwise.\n     */\n    protected async fetchLessonData(): Promise<boolean> {\n        try {\n            this.lesson = await AddonModLesson.getLesson(this.courseId, this.cmId);\n\n            this.title = this.lesson.name; // Temporary title.\n\n            // Block the lesson so it cannot be synced.\n            CoreSync.blockOperation(this.component, this.lesson.id);\n\n            // Wait for any ongoing sync to finish. We won't sync a lesson while it's being played.\n            await AddonModLessonSync.waitForSync(this.lesson.id);\n\n            // If lesson has offline data already, use offline mode.\n            this.offline = await AddonModLessonOffline.hasOfflineData(this.lesson.id);\n\n            if (!this.offline && !CoreNetwork.isOnline() && AddonModLesson.isLessonOffline(this.lesson) && !this.review) {\n                // Lesson doesn't have offline data, but it allows offline and the device is offline. Use offline mode.\n                this.offline = true;\n            }\n\n            const lessonId = this.lesson.id;\n            const options = {\n                cmId: this.cmId,\n                readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n            };\n            this.accessInfo = await this.callFunction<AddonModLessonGetAccessInformationWSResponse>(\n                () => AddonModLesson.getAccessInformation(lessonId, options),\n                options,\n            );\n\n            const promises: Promise<void>[] = [];\n            this.canManage = this.accessInfo.canmanage;\n            this.retake = this.accessInfo.attemptscount;\n            this.showRetake = !this.currentPage && this.retake > 0; // Only show it in first page if it isn't the first retake.\n\n            if (this.accessInfo.preventaccessreasons.length) {\n                // If it's a password protected lesson and we have the password, allow playing it.\n                const preventReason = AddonModLesson.getPreventAccessReason(this.accessInfo, !!this.password, this.review);\n                if (preventReason) {\n                    // Lesson cannot be played, show message and go back.\n                    throw new CoreError(preventReason.message);\n                }\n            }\n\n            if (this.review && this.retakeToReview != this.accessInfo.attemptscount - 1) {\n                // Reviewing a retake that isn't the last one. Error.\n                throw new CoreError(Translate.instant('addon.mod_lesson.errorreviewretakenotlast'));\n            }\n\n            if (this.password) {\n                // Lesson uses password, get the whole lesson object.\n                const options = {\n                    password: this.password,\n                    cmId: this.cmId,\n                    readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n                };\n                promises.push(this.callFunction<AddonModLessonLessonWSData>(\n                    () => AddonModLesson.getLessonWithPassword(lessonId, options),\n                    options,\n                ).then((lesson) => {\n                    this.lesson = lesson;\n\n                    return;\n                }));\n            }\n\n            if (this.offline) {\n                // Offline mode, get the list of possible jumps to allow navigation.\n                promises.push(AddonModLesson.getPagesPossibleJumps(this.lesson.id, {\n                    cmId: this.cmId,\n                    readingStrategy: CoreSitesReadingStrategy.PREFER_CACHE,\n                }).then((jumpList) => {\n                    this.jumps = jumpList;\n\n                    return;\n                }));\n            }\n\n            await Promise.all(promises);\n\n            this.mediaFile = this.lesson.mediafiles?.[0];\n            this.lessonWidth = this.lesson.slideshow ? CoreDomUtils.formatPixelsSize(this.lesson.mediawidth!) : '';\n            this.lessonHeight = this.lesson.slideshow ? CoreDomUtils.formatPixelsSize(this.lesson.mediaheight!) : '';\n\n            await this.launchRetake(this.currentPage);\n\n            return true;\n        } catch (error) {\n\n            if (this.review && this.retakeToReview && CoreUtils.isWebServiceError(error)) {\n                // The user cannot review the retake. Unmark the retake as being finished in sync.\n                await AddonModLessonSync.deleteRetakeFinishedInSync(this.lesson!.id);\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n            this.forceLeave = true;\n            CoreNavigator.back();\n\n            return false;\n        }\n    }\n\n    /**\n     * Finish the retake.\n     *\n     * @param outOfTime Whether the retake is finished because the user ran out of time.\n     * @returns Promise resolved when done.\n     */\n    protected async finishRetake(outOfTime?: boolean): Promise<void> {\n        if (!this.lesson) {\n            return;\n        }\n\n        const lesson = this.lesson;\n        this.messages = [];\n\n        if (this.offline && CoreNetwork.isOnline()) {\n            // Offline mode but the app is online. Try to sync the data.\n            const result = await CoreUtils.ignoreErrors(\n                AddonModLessonSync.syncLesson(lesson.id, true, true),\n            );\n\n            if (result?.warnings?.length) {\n                // Some data was deleted. Check if the retake has changed.\n                const info = await AddonModLesson.getAccessInformation(lesson.id, {\n                    cmId: this.cmId,\n                });\n\n                if (info.attemptscount != this.accessInfo!.attemptscount) {\n                    // The retake has changed. Leave the view and show the error.\n                    this.forceLeave = true;\n                    CoreNavigator.back();\n\n                    throw new CoreError(result.warnings[0]);\n                }\n\n                // Retake hasn't changed, show the warning and finish the retake in offline.\n                CoreDomUtils.showErrorModal(result.warnings[0]);\n            }\n\n            this.offline = false;\n        }\n\n        // Now finish the retake.\n        const options = {\n            password: this.password,\n            outOfTime,\n            review: this.review,\n            offline: this.offline,\n            accessInfo: this.accessInfo,\n        };\n        const data = await this.callFunction<AddonModLessonFinishRetakeResponse>(\n            () => AddonModLesson.finishRetake(lesson, this.courseId, options),\n            options,\n        );\n\n        this.title = lesson.name;\n        this.eolData = data.data;\n        this.messages = this.messages.concat(data.messages);\n        this.processData = undefined;\n\n        CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'lesson' });\n\n        // Format activity link if present.\n        if (this.eolData.activitylink) {\n            this.activityLink = AddonModLessonHelper.formatActivityLink(<string> this.eolData.activitylink.value);\n        } else {\n            this.activityLink = undefined;\n        }\n\n        // Format review lesson if present.\n        if (this.eolData.reviewlesson) {\n            const params = CoreUrlUtils.extractUrlParams(<string> this.eolData.reviewlesson.value);\n\n            if (!params || !params.pageid) {\n                // No pageid in the URL, the user cannot review (probably didn't answer any question).\n                delete this.eolData.reviewlesson;\n            } else {\n                this.reviewPageId = Number(params.pageid);\n            }\n        }\n    }\n\n    /**\n     * Jump to a certain page after performing an action.\n     *\n     * @param pageId The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async jumpToPage(pageId: number): Promise<void> {\n        if (pageId === 0) {\n            // Not a valid page, return to entry view.\n            // This happens, for example, when the user clicks to go to previous page and there is no previous page.\n            this.forceLeave = true;\n            CoreNavigator.back();\n\n            return;\n        } else if (pageId == AddonModLessonProvider.LESSON_EOL) {\n            // End of lesson reached.\n            return this.finishRetake();\n        }\n\n        // Load new page.\n        this.messages = [];\n\n        return this.loadPage(pageId);\n    }\n\n    /**\n     * Start or continue a retake.\n     *\n     * @param pageId The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async launchRetake(pageId?: number): Promise<void> {\n        let data: AddonModLessonLaunchAttemptWSResponse | undefined;\n\n        if (this.review) {\n            // Review mode, no need to launch the retake.\n        } else if (!this.offline) {\n            // Not in offline mode, launch the retake.\n            data = await AddonModLesson.launchRetake(this.lesson!.id, this.password, pageId);\n        } else {\n            // Check if there is a finished offline retake.\n            const finished = await AddonModLessonOffline.hasFinishedRetake(this.lesson!.id);\n            if (finished) {\n                // Always show EOL page.\n                pageId = AddonModLessonProvider.LESSON_EOL;\n            }\n        }\n\n        this.currentPage = pageId || this.accessInfo!.firstpageid;\n        this.messages = data?.messages || [];\n\n        if (this.lesson!.timelimit && !this.accessInfo!.canmanage) {\n            // Get the last lesson timer.\n            const timers = await AddonModLesson.getTimers(this.lesson!.id, {\n                cmId: this.cmId,\n                readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n            });\n\n            this.endTime = timers[timers.length - 1].starttime + this.lesson!.timelimit;\n        }\n\n        return this.loadPage(this.currentPage);\n    }\n\n    /**\n     * Load the lesson menu.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadMenu(): Promise<void> {\n        if (this.loadingMenu || !this.lesson) {\n            // Already loading.\n            return;\n        }\n\n        try {\n            this.loadingMenu = true;\n            const lessonId = this.lesson.id;\n            const options = {\n                password: this.password,\n                cmId: this.cmId,\n                readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n            };\n\n            const pages = await this.callFunction<AddonModLessonGetPagesPageWSData[]>(\n                () => AddonModLesson.getPages(lessonId, options),\n                options,\n            );\n\n            this.lessonPages = pages.map((entry) => entry.page);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading menu.');\n        } finally {\n            this.loadingMenu = false;\n        }\n    }\n\n    /**\n     * Load a certain page.\n     *\n     * @param pageId The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async loadPage(pageId: number): Promise<void> {\n        if (pageId == AddonModLessonProvider.LESSON_EOL) {\n            // End of lesson reached.\n            return this.finishRetake();\n        } else if (!this.lesson) {\n            return;\n        }\n\n        const lesson = this.lesson;\n        const options = {\n            password: this.password,\n            review: this.review,\n            includeContents: true,\n            cmId: this.cmId,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n            accessInfo: this.accessInfo,\n            jumps: this.jumps,\n            includeOfflineData: true,\n        };\n\n        const data = await this.callFunction<AddonModLessonGetPageDataWSResponse>(\n            () => AddonModLesson.getPageData(lesson, pageId, options),\n            options,\n        );\n\n        if (data.newpageid == AddonModLessonProvider.LESSON_EOL) {\n            // End of lesson reached.\n            return this.finishRetake();\n        }\n\n        this.pageData = data;\n        this.title = data.page!.title;\n        this.pageContent = AddonModLessonHelper.getPageContentsFromPageData(data);\n        this.loaded = true;\n        this.currentPage = pageId;\n        this.messages = this.messages.concat(data.messages);\n\n        // Page loaded, hide EOL and feedback data if shown.\n        this.eolData = this.processData = undefined;\n\n        if (AddonModLesson.isQuestionPage(data.page!.type)) {\n            // Create an empty FormGroup without controls, they will be added in getQuestionFromPageData.\n            this.questionForm = this.formBuilder.group({});\n            this.pageButtons = [];\n            this.question = AddonModLessonHelper.getQuestionFromPageData(this.questionForm, data);\n            this.originalData = this.questionForm.getRawValue(); // Use getRawValue to include disabled values.\n        } else {\n            this.pageButtons = AddonModLessonHelper.getPageButtonsFromHtml(data.pagecontent || '');\n            this.question = undefined;\n            this.originalData = undefined;\n        }\n\n        // Don't display the navigation menu in review mode, using them displays errors.\n        if (data.displaymenu && !this.displayMenu && !this.review) {\n            // Load the menu.\n            this.loadMenu();\n        }\n        this.displayMenu = !this.review && !!data.displaymenu;\n\n        if (!this.firstPageLoaded) {\n            this.firstPageLoaded = true;\n        } else {\n            this.showRetake = false;\n        }\n    }\n\n    /**\n     * Process a page, sending some data.\n     *\n     * @param data The data to send.\n     * @param formSubmitted Whether a form was submitted.\n     * @returns Promise resolved when done.\n     */\n    protected async processPage(data: CoreFormFields, formSubmitted?: boolean): Promise<void> {\n        if (!this.lesson || !this.pageData) {\n            return;\n        }\n\n        this.loaded = false;\n\n        const lesson = this.lesson;\n        const pageData = this.pageData;\n        const options: AddonModLessonProcessPageOptions = {\n            password: this.password,\n            review: this.review,\n            offline: this.offline,\n            accessInfo: this.accessInfo,\n            jumps: this.jumps,\n        };\n\n        try {\n            const result = await this.callFunction<AddonModLessonProcessPageResponse>(\n                () => AddonModLesson.processPage(\n                    lesson,\n                    this.courseId,\n                    pageData,\n                    data,\n                    options,\n                ),\n                options,\n            );\n\n            if (formSubmitted) {\n                CoreForms.triggerFormSubmittedEvent(\n                    this.formElement,\n                    result.sent,\n                    CoreSites.getCurrentSiteId(),\n                );\n            }\n\n            if (!this.offline && !this.review && AddonModLesson.isLessonOffline(lesson)) {\n                // Lesson allows offline and the user changed some data in server. Update cached data.\n                const retake = this.accessInfo!.attemptscount;\n                const options = {\n                    cmId: this.cmId,\n                    readingStrategy: CoreSitesReadingStrategy.ONLY_NETWORK,\n                };\n\n                // Update in background the list of content pages viewed or question attempts.\n                if (AddonModLesson.isQuestionPage(this.pageData?.page?.type || -1)) {\n                    AddonModLesson.getQuestionsAttemptsOnline(lesson.id, retake, options);\n                } else {\n                    AddonModLesson.getContentPagesViewedOnline(lesson.id, retake, options);\n                }\n            }\n\n            if (result.nodefaultresponse || result.inmediatejump) {\n                // Don't display feedback or force a redirect to a new page. Load the new page.\n                return await this.jumpToPage(result.newpageid);\n            }\n\n            // Not inmediate jump, show the feedback.\n            result.feedback = AddonModLessonHelper.removeQuestionFromFeedback(result.feedback);\n            this.messages = result.messages;\n            this.processData = result;\n            this.processDataButtons = [];\n\n            if (lesson.review && !result.correctanswer && !result.noanswer && !result.isessayquestion &&\n                    !result.maxattemptsreached && !result.reviewmode) {\n                // User can try again, show button to do so.\n                this.processDataButtons.push({\n                    label: 'addon.mod_lesson.reviewquestionback',\n                    pageId: this.currentPage!,\n                });\n            }\n\n            // Button to continue.\n            if (lesson.review && !result.correctanswer && !result.noanswer && !result.isessayquestion &&\n                    !result.maxattemptsreached) {\n                /* If both the \"Yes, I'd like to try again\" and \"No, I just want to go on to the next question\" point to the\n                    same page then don't show the \"No, I just want to go on to the next question\" button. It's confusing. */\n                if (pageData.page?.id != result.newpageid) {\n                    // Button to continue the lesson (the page to go is configured by the teacher).\n                    this.processDataButtons.push({\n                        label: 'addon.mod_lesson.reviewquestioncontinue',\n                        pageId: result.newpageid,\n                    });\n                }\n            } else {\n                this.processDataButtons.push({\n                    label: 'addon.mod_lesson.continue',\n                    pageId: result.newpageid,\n                });\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error processing page');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Review the lesson.\n     *\n     * @param pageId Page to load.\n     */\n    async reviewLesson(pageId: number): Promise<void> {\n        this.loaded = false;\n        this.review = true;\n        this.offline = false; // Don't allow offline mode in review.\n\n        try {\n            await this.loadPage(pageId);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading page');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Submit a question.\n     *\n     * @param e Event.\n     */\n    submitQuestion(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.loaded = false;\n\n        // Use getRawValue to include disabled values.\n        const data = AddonModLessonHelper.prepareQuestionData(this.question!, this.questionForm!.getRawValue());\n\n        this.processPage(data, true).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Time up.\n     */\n    async timeUp(): Promise<void> {\n        // Time up called, hide the timer.\n        this.endTime = undefined;\n        this.loaded = false;\n\n        try {\n            await this.finishRetake(true);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error finishing attempt');\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Show the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    async showMenu(): Promise<void> {\n        this.menuShown = true;\n\n        await CoreDomUtils.openSideModal({\n            component: AddonModLessonMenuModalPage,\n            componentProps: {\n                pageInstance: this,\n            },\n        });\n\n        this.menuShown = false;\n    }\n\n}\n\n/**\n * Common options for functions called using callFunction.\n */\ntype CommonOptions = CoreSitesCommonWSOptions & {\n    jumps?: AddonModLessonPossibleJumps;\n    offline?: boolean;\n};\n\n/**\n * Button displayed after processing a page.\n */\ntype ProcessDataButton = {\n    label: string;\n    pageId: number;\n};\n","export default \":host {\\n  --background-odd: var(--light);\\n}\\n\\n:host-context(html.dark) {\\n  --background-odd: var(--medium);\\n}\\n\\n:host ::ng-deep .addon-mod_lesson-slideshow {\\n  max-width: 100%;\\n  max-height: 100%;\\n  margin: 0 auto;\\n}\\n\\n:host ::ng-deep .studentanswer {\\n  -webkit-padding-start: 8px;\\n          padding-inline-start: 8px;\\n}\\n\\n:host ::ng-deep table {\\n  width: 100%;\\n  margin-top: 1.5rem;\\n}\\n\\n:host ::ng-deep table tr:nth-child(odd) {\\n  background-color: var(--background-odd);\\n}\\n\\n:host ::ng-deep table tr:last-child td {\\n  border-bottom: 0;\\n}\\n\\n:host ::ng-deep table td {\\n  padding: 5px;\\n  line-height: 1.5;\\n  border-bottom: 1px solid var(--stroke);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hZGRvbnMvbW9kL2xlc3Nvbi9wYWdlcy9wbGF5ZXIvcGxheWVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRyw4QkFBQTtBQUNIOztBQUVBO0VBQ0csK0JBQUE7QUFDSDs7QUFHSTtFQUNJLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFBUjs7QUFHSTtFQUNJLDBCQUFBO1VBQUEseUJBQUE7QUFEUjs7QUFJSTtFQUNJLFdBQUE7RUFDQSxrQkFBQTtBQUZSOztBQUlRO0VBQ0ksdUNBQUE7QUFGWjs7QUFLUTtFQUNJLGdCQUFBO0FBSFo7O0FBTVE7RUFDSSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQ0FBQTtBQUpaIiwiZmlsZSI6InNyYy9hZGRvbnMvbW9kL2xlc3Nvbi9wYWdlcy9wbGF5ZXIvcGxheWVyLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAtLWJhY2tncm91bmQtb2RkOiB2YXIoLS1saWdodCk7XG59XG5cbjpob3N0LWNvbnRleHQoaHRtbC5kYXJrKSB7XG4gICAtLWJhY2tncm91bmQtb2RkOiB2YXIoLS1tZWRpdW0pO1xufVxuXG46aG9zdCA6Om5nLWRlZXAge1xuICAgIC5hZGRvbi1tb2RfbGVzc29uLXNsaWRlc2hvdyB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuXG4gICAgLnN0dWRlbnRhbnN3ZXIge1xuICAgICAgICBwYWRkaW5nLWlubGluZS1zdGFydDogOHB4O1xuICAgIH1cblxuICAgIHRhYmxlIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi10b3A6IDEuNXJlbTtcblxuICAgICAgICB0cjpudGgtY2hpbGQob2RkKSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kLW9kZCk7XG4gICAgICAgIH1cblxuICAgICAgICB0cjpsYXN0LWNoaWxkIHRkIHtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgICAgIH1cblxuICAgICAgICB0ZCB7XG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLXN0cm9rZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0= */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { CoreQuestionsAnswers } from '@features/question/services/question';\nimport { CoreLogger } from '@singletons/logger';\nimport { AddonModQuizConnectionErrorComponent } from '../components/connection-error/connection-error';\nimport { AddonModQuiz, AddonModQuizAttemptWSData, AddonModQuizQuizWSData } from '../services/quiz';\nimport { CoreDomUtils } from '@services/utils/dom';\n\n/**\n * Class to support auto-save in quiz. Every certain seconds, it will check if there are changes in the current page answers\n * and, if so, it will save them automatically.\n */\nexport class AddonModQuizAutoSave {\n\n    protected readonly CHECK_CHANGES_INTERVAL = 5000;\n\n    protected logger: CoreLogger;\n    protected checkChangesInterval?: number; // Interval to check if there are changes in the answers.\n    protected loadPreviousAnswersTimeout?: number; // Timeout to load previous answers.\n    protected autoSaveTimeout?: number; // Timeout to auto-save the answers.\n    protected popover?: HTMLIonPopoverElement; // Popover to display there's been an error.\n    protected popoverShown = false; // Whether the popover is shown.\n    protected previousAnswers?: CoreQuestionsAnswers; // The previous answers, to check if answers have changed.\n    protected errorObservable: BehaviorSubject<boolean>; // An observable to notify if there's been an error.\n\n    /**\n     * Constructor.\n     *\n     * @param formName Name of the form where the answers are stored.\n     * @param buttonSelector Selector to find the button to show the connection error.\n     */\n    constructor(\n        protected formName: string,\n        protected buttonSelector: string,\n    ) {\n        this.logger = CoreLogger.getInstance('AddonModQuizAutoSave');\n\n        // Create the observable to notify if an error happened.\n        this.errorObservable = new BehaviorSubject<boolean>(false);\n    }\n\n    /**\n     * Cancel a pending auto save.\n     */\n    cancelAutoSave(): void {\n        clearTimeout(this.autoSaveTimeout);\n        this.autoSaveTimeout = undefined;\n    }\n\n    /**\n     * Check if the answers have changed in a page.\n     *\n     * @param quiz Quiz.\n     * @param attempt Attempt.\n     * @param preflightData Preflight data.\n     * @param offline Whether the quiz is being attempted in offline mode.\n     */\n    checkChanges(\n        quiz: AddonModQuizQuizWSData,\n        attempt: AddonModQuizAttemptWSData,\n        preflightData: Record<string, string>,\n        offline?: boolean,\n    ): void {\n        if (this.autoSaveTimeout) {\n            // We already have an auto save pending, no need to check changes.\n            return;\n        }\n\n        const answers = this.getAnswers();\n\n        if (!this.previousAnswers) {\n            // Previous answers isn't set, set it now.\n            this.previousAnswers = answers;\n\n            return;\n        }\n\n        // Check if answers have changed.\n        let equal = true;\n\n        for (const name in answers) {\n            if (this.previousAnswers[name] != answers[name]) {\n                equal = false;\n                break;\n            }\n        }\n\n        if (!equal) {\n            this.setAutoSaveTimer(quiz, attempt, preflightData, offline);\n        }\n\n        this.previousAnswers = answers;\n    }\n\n    /**\n     * Get answers from a form.\n     *\n     * @returns Answers.\n     */\n    protected getAnswers(): CoreQuestionsAnswers {\n        return CoreQuestionHelper.getAnswersFromForm(document.forms[this.formName]);\n    }\n\n    /**\n     * Hide the auto save error.\n     */\n    hideAutoSaveError(): void {\n        this.errorObservable.next(false);\n        this.popover?.dismiss();\n    }\n\n    /**\n     * Returns an observable that will notify when an error happens or stops.\n     * It will send true when there's an error, and false when the error has been ammended.\n     *\n     * @returns Observable.\n     */\n    onError(): BehaviorSubject<boolean> {\n        return this.errorObservable;\n    }\n\n    /**\n     * Schedule an auto save process if it's not scheduled already.\n     *\n     * @param quiz Quiz.\n     * @param attempt Attempt.\n     * @param preflightData Preflight data.\n     * @param offline Whether the quiz is being attempted in offline mode.\n     */\n    setAutoSaveTimer(\n        quiz: AddonModQuizQuizWSData,\n        attempt: AddonModQuizAttemptWSData,\n        preflightData: Record<string, string>,\n        offline?: boolean,\n    ): void {\n        // Don't schedule if already shceduled or quiz is almost closed.\n        if (!quiz.autosaveperiod || this.autoSaveTimeout || AddonModQuiz.isAttemptTimeNearlyOver(quiz, attempt)) {\n            return;\n        }\n\n        // Schedule save.\n        this.autoSaveTimeout = window.setTimeout(async () => {\n            const answers = this.getAnswers();\n            this.cancelAutoSave();\n            this.previousAnswers = answers; // Update previous answers to match what we're sending to the server.\n\n            try {\n                await AddonModQuiz.saveAttempt(quiz, attempt, answers, preflightData, offline);\n\n                // Save successful, we can hide the connection error if it was shown.\n                this.hideAutoSaveError();\n            } catch (error) {\n                // Error auto-saving. Show error and set timer again.\n                this.logger.warn('Error auto-saving data.', error);\n\n                // If there was no error already, show the error message.\n                if (!this.errorObservable.getValue()) {\n                    this.errorObservable.next(true);\n                    this.showAutoSaveError();\n                }\n\n                // Try again.\n                this.setAutoSaveTimer(quiz, attempt, preflightData, offline);\n            }\n        }, quiz.autosaveperiod * 1000);\n    }\n\n    /**\n     * Show an error popover due to an auto save error.\n     */\n    async showAutoSaveError(ev?: Event): Promise<void> {\n        // Don't show popover if it was already shown.\n        if (this.popoverShown) {\n            return;\n        }\n\n        const event: unknown = ev || {\n            // Cannot use new Event() because event's target property is readonly\n            target: document.querySelector(this.buttonSelector),\n            stopPropagation: () => {}, // eslint-disable-line @typescript-eslint/no-empty-function\n            preventDefault: () => {}, // eslint-disable-line @typescript-eslint/no-empty-function\n        };\n        this.popoverShown = true;\n\n        this.popover = await CoreDomUtils.openPopover({\n            component: AddonModQuizConnectionErrorComponent,\n            event: <Event> event,\n        });\n\n        this.popoverShown = false;\n    }\n\n    /**\n     * Start a process to periodically check changes in answers.\n     *\n     * @param quiz Quiz.\n     * @param attempt Attempt.\n     * @param preflightData Preflight data.\n     * @param offline Whether the quiz is being attempted in offline mode.\n     */\n    startCheckChangesProcess(\n        quiz: AddonModQuizQuizWSData,\n        attempt: AddonModQuizAttemptWSData,\n        preflightData: Record<string, string>,\n        offline?: boolean,\n    ): void {\n        if (this.checkChangesInterval || !quiz.autosaveperiod) {\n            // We already have the interval in place or the quiz has autosave disabled.\n            return;\n        }\n\n        this.previousAnswers = undefined;\n\n        // Load initial answers in 2.5 seconds so the first check interval finds them already loaded.\n        this.loadPreviousAnswersTimeout = window.setTimeout(() => {\n            this.checkChanges(quiz, attempt, preflightData, offline);\n        }, 2500);\n\n        // Check changes every certain time.\n        this.checkChangesInterval = window.setInterval(() => {\n            this.checkChanges(quiz, attempt, preflightData, offline);\n        }, this.CHECK_CHANGES_INTERVAL);\n    }\n\n    /**\n     * Stops the periodical check for changes.\n     */\n    stopCheckChangesProcess(): void {\n        clearTimeout(this.loadPreviousAnswersTimeout);\n        clearInterval(this.checkChangesInterval);\n\n        this.loadPreviousAnswersTimeout = undefined;\n        this.checkChangesInterval = undefined;\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreQuestionComponentsModule } from '@features/question/components/components.module';\nimport { CanLeaveGuard } from '@guards/can-leave';\nimport { AddonModQuizPlayerPage } from './player.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonModQuizPlayerPage,\n        canDeactivate: [CanLeaveGuard],\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreQuestionComponentsModule,\n    ],\n    declarations: [\n        AddonModQuizPlayerPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonModQuizPlayerPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ChangeDetectorRef, ViewChildren, QueryList, ElementRef } from '@angular/core';\nimport { IonContent } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { CoreIonLoadingElement } from '@classes/ion-loading';\nimport { CoreQuestionComponent } from '@features/question/components/question/question';\nimport { CoreQuestionQuestionParsed, CoreQuestionsAnswers } from '@features/question/services/question';\nimport { CoreQuestionBehaviourButton, CoreQuestionHelper } from '@features/question/services/question-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites, CoreSitesReadingStrategy } from '@services/sites';\nimport { CoreSync } from '@services/sync';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { ModalController, Translate } from '@singletons';\nimport { CoreEvents } from '@singletons/events';\nimport { AddonModQuizAutoSave } from '../../classes/auto-save';\nimport {\n    AddonModQuizNavigationModalComponent,\n    AddonModQuizNavigationModalReturn,\n    AddonModQuizNavigationQuestion,\n} from '../../components/navigation-modal/navigation-modal';\nimport {\n    AddonModQuiz,\n    AddonModQuizAttemptWSData,\n    AddonModQuizGetAttemptAccessInformationWSResponse,\n    AddonModQuizGetQuizAccessInformationWSResponse,\n    AddonModQuizProvider,\n    AddonModQuizQuizWSData,\n} from '../../services/quiz';\nimport { AddonModQuizAttempt, AddonModQuizHelper } from '../../services/quiz-helper';\nimport { AddonModQuizSync } from '../../services/quiz-sync';\nimport { CanLeave } from '@guards/can-leave';\nimport { CoreForms } from '@singletons/form';\nimport { CoreDom } from '@singletons/dom';\nimport { CoreTime } from '@singletons/time';\nimport { CoreComponentsRegistry } from '@singletons/components-registry';\n\n/**\n * Page that allows attempting a quiz.\n */\n@Component({\n    selector: 'page-addon-mod-quiz-player',\n    templateUrl: 'player.html',\n    styleUrls: ['player.scss'],\n})\nexport class AddonModQuizPlayerPage implements OnInit, OnDestroy, CanLeave {\n\n    @ViewChild(IonContent) content?: IonContent;\n    @ViewChildren(CoreQuestionComponent) questionComponents?: QueryList<CoreQuestionComponent>;\n    @ViewChild('quizForm') formElement?: ElementRef;\n\n    quiz?: AddonModQuizQuizWSData; // The quiz the attempt belongs to.\n    attempt?: AddonModQuizAttempt; // The attempt being attempted.\n    moduleUrl?: string; // URL to the module in the site.\n    component = AddonModQuizProvider.COMPONENT; // Component to link the files to.\n    loaded = false; // Whether data has been loaded.\n    quizAborted = false; // Whether the quiz was aborted due to an error.\n    offline = false; // Whether the quiz is being attempted in offline mode.\n    navigation: AddonModQuizNavigationQuestion[] = []; // List of questions to navigate them.\n    questions: QuizQuestion[] = []; // Questions of the current page.\n    nextPage = -2; // Next page.\n    previousPage = -1; // Previous page.\n    showSummary = false; // Whether the attempt summary should be displayed.\n    summaryQuestions: CoreQuestionQuestionParsed[] = []; // The questions to display in the summary.\n    canReturn = false; // Whether the user can return to a page after seeing the summary.\n    preventSubmitMessages: string[] = []; // List of messages explaining why the quiz cannot be submitted.\n    endTime?: number; // The time when the attempt must be finished.\n    autoSaveError = false; // Whether there's been an error in auto-save.\n    isSequential = false; // Whether quiz navigation is sequential.\n    readableTimeLimit?: string; // Time limit in a readable format.\n    dueDateWarning?: string; // Warning about due date.\n    courseId!: number; // The course ID the quiz belongs to.\n    cmId!: number; // Course module ID.\n\n    protected preflightData: Record<string, string> = {}; // Preflight data to attempt the quiz.\n    protected quizAccessInfo?: AddonModQuizGetQuizAccessInformationWSResponse; // Quiz access information.\n    protected attemptAccessInfo?: AddonModQuizGetAttemptAccessInformationWSResponse; // Attempt access info.\n    protected lastAttempt?: AddonModQuizAttemptWSData; // Last user attempt before a new one is created (if needed).\n    protected newAttempt = false; // Whether the user is starting a new attempt.\n    protected quizDataLoaded = false; // Whether the quiz data has been loaded.\n    protected timeUpCalled = false; // Whether the time up function has been called.\n    protected autoSave!: AddonModQuizAutoSave; // Class to auto-save answers every certain time.\n    protected autoSaveErrorSubscription?: Subscription; // To be notified when an error happens in auto-save.\n    protected forceLeave = false; // If true, don't perform any check when leaving the view.\n    protected reloadNavigation = false; // Whether navigation needs to be reloaded because some data was sent to server.\n\n    constructor(\n        protected changeDetector: ChangeDetectorRef,\n        protected elementRef: ElementRef,\n    ) {\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        try {\n            this.cmId = CoreNavigator.getRequiredRouteNumberParam('cmId');\n            this.courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            this.moduleUrl = CoreNavigator.getRouteParam('moduleUrl');\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n\n        // Create the auto save instance.\n        this.autoSave = new AddonModQuizAutoSave(\n            'addon-mod_quiz-player-form',\n            '#addon-mod_quiz-connection-error-button',\n        );\n\n        // Start the player when the page is loaded.\n        this.start();\n\n        // Listen for errors on auto-save.\n        this.autoSaveErrorSubscription = this.autoSave.onError().subscribe((error) => {\n            this.autoSaveError = error;\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        // Stop auto save.\n        this.autoSave.cancelAutoSave();\n        this.autoSave.stopCheckChangesProcess();\n        this.autoSaveErrorSubscription?.unsubscribe();\n\n        if (this.quiz) {\n            // Unblock the quiz so it can be synced.\n            CoreSync.unblockOperation(AddonModQuizProvider.COMPONENT, this.quiz.id);\n        }\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @returns Resolved if we can leave it, rejected if not.\n     */\n    async canLeave(): Promise<boolean> {\n        if (this.forceLeave || this.quizAborted || !this.questions.length || this.showSummary) {\n            return true;\n        }\n\n        // Save answers.\n        const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n        try {\n            await this.processAttempt(false, false);\n        } catch (error) {\n            // Save attempt failed. Show confirmation.\n            modal.dismiss();\n\n            await CoreDomUtils.showConfirm(Translate.instant('addon.mod_quiz.confirmleavequizonerror'));\n\n            CoreForms.triggerFormCancelledEvent(this.formElement, CoreSites.getCurrentSiteId());\n        } finally {\n            modal.dismiss();\n        }\n\n        return true;\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    async ionViewWillLeave(): Promise<void> {\n        // Close any modal if present.\n        const modal = await ModalController.getTop();\n\n        modal?.dismiss();\n    }\n\n    /**\n     * Abort the quiz.\n     */\n    abortQuiz(): void {\n        this.quizAborted = true;\n    }\n\n    /**\n     * A behaviour button in a question was clicked (Check, Redo, ...).\n     *\n     * @param button Clicked button.\n     */\n    async behaviourButtonClicked(button: CoreQuestionBehaviourButton): Promise<void> {\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            // Confirm that the user really wants to do it.\n            await CoreDomUtils.showConfirm(Translate.instant('core.areyousure'));\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            // Get the answers.\n            const answers = await this.prepareAnswers();\n\n            // Add the clicked button data.\n            answers[button.name] = button.value;\n\n            // Behaviour checks are always in online.\n            await AddonModQuiz.processAttempt(this.quiz!, this.attempt!, answers, this.preflightData);\n\n            this.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n\n            // Reload the current page.\n            const scrollElement = await this.content?.getScrollElement();\n            const scrollTop = scrollElement?.scrollTop || -1;\n\n            this.loaded = false;\n            this.content?.scrollToTop(); // Scroll top so the spinner is seen.\n\n            try {\n                await this.loadPage(this.attempt!.currentpage!);\n            } finally {\n                this.loaded = true;\n                if (scrollTop != -1) {\n                    // Wait for content to be rendered.\n                    setTimeout(() => {\n                        this.content?.scrollToPoint(0, scrollTop);\n                    }, 50);\n                }\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error performing action.');\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Change the current page. If slot is supplied, try to scroll to that question.\n     *\n     * @param page Page to load. -1 means summary.\n     * @param fromModal Whether the page was selected using the navigation modal.\n     * @param slot Slot of the question to scroll to.\n     * @returns Promise resolved when done.\n     */\n    async changePage(page: number, fromModal?: boolean, slot?: number): Promise<void> {\n        if (!this.attempt) {\n            return;\n        }\n\n        if (page != -1 && (this.attempt.state == AddonModQuizProvider.ATTEMPT_OVERDUE || this.attempt.finishedOffline)) {\n            // We can't load a page if overdue or the local attempt is finished.\n            return;\n        } else if (page == this.attempt.currentpage && !this.showSummary && slot !== undefined) {\n            // Navigating to a question in the current page.\n            await this.scrollToQuestion(slot);\n\n            return;\n        } else if ((page == this.attempt.currentpage && !this.showSummary) || (fromModal && this.isSequential && page != -1)) {\n            // If the user is navigating to the current page we do nothing.\n            // Also, in sequential quizzes we don't allow navigating using the modal except for finishing the quiz (summary).\n            return;\n        } else if (page === -1 && this.showSummary) {\n            // Summary already shown.\n            return;\n        }\n\n        this.content?.scrollToTop();\n\n        // First try to save the attempt data. We only save it if we're not seeing the summary.\n        if (!this.showSummary) {\n            const modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            try {\n                await this.processAttempt(false, false);\n\n                modal.dismiss();\n            } catch (error) {\n                CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true);\n                modal.dismiss();\n\n                return;\n            }\n\n            this.reloadNavigation = true; // Data sent to server, navigation should be reloaded.\n        }\n\n        this.loaded = false;\n\n        try {\n            // Attempt data successfully saved, load the page or summary.\n            // Stop checking for changes during page change.\n            this.autoSave.stopCheckChangesProcess();\n\n            if (page === -1) {\n                await this.loadSummary();\n            } else {\n                await this.loadPage(page);\n            }\n        } catch (error) {\n            // If the user isn't seeing the summary, start the check again.\n            if (!this.showSummary) {\n                this.autoSave.startCheckChangesProcess(this.quiz!, this.attempt, this.preflightData, this.offline);\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n        } finally {\n            this.loaded = true;\n\n            if (slot !== undefined) {\n                // Scroll to the question.\n                await this.scrollToQuestion(slot);\n            }\n        }\n    }\n\n    /**\n     * Convenience function to get the quiz data.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fetchData(): Promise<void> {\n        try {\n            this.quiz = await AddonModQuiz.getQuiz(this.courseId, this.cmId);\n\n            // Block the quiz so it cannot be synced.\n            CoreSync.blockOperation(AddonModQuizProvider.COMPONENT, this.quiz.id);\n\n            // Wait for any ongoing sync to finish. We won't sync a quiz while it's being played.\n            await AddonModQuizSync.waitForSync(this.quiz.id);\n\n            this.isSequential = AddonModQuiz.isNavigationSequential(this.quiz);\n\n            if (AddonModQuiz.isQuizOffline(this.quiz)) {\n                // Quiz supports offline.\n                this.offline = true;\n            } else {\n                // Quiz doesn't support offline right now, but maybe it did and then the setting was changed.\n                // If we have an unfinished offline attempt then we'll use offline mode.\n                this.offline = await AddonModQuiz.isLastAttemptOfflineUnfinished(this.quiz);\n            }\n\n            if (this.quiz!.timelimit && this.quiz!.timelimit > 0) {\n                this.readableTimeLimit = CoreTime.formatTime(this.quiz.timelimit);\n            }\n\n            // Get access information for the quiz.\n            this.quizAccessInfo = await AddonModQuiz.getQuizAccessInformation(this.quiz.id, {\n                cmId: this.quiz.coursemodule,\n                readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n            });\n\n            // Get user attempts to determine last attempt.\n            const attempts = await AddonModQuiz.getUserAttempts(this.quiz.id, {\n                cmId: this.quiz.coursemodule,\n                readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n            });\n\n            if (!attempts.length) {\n                // There are no attempts, start a new one.\n                this.newAttempt = true;\n\n                return;\n            }\n\n            // Get the last attempt. If it's finished, start a new one.\n            this.lastAttempt = await AddonModQuizHelper.setAttemptCalculatedData(\n                this.quiz,\n                attempts[attempts.length - 1],\n                false,\n                undefined,\n                true,\n            );\n\n            this.newAttempt = AddonModQuiz.isAttemptFinished(this.lastAttempt.state);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquiz', true);\n        }\n    }\n\n    /**\n     * Finish an attempt, either by timeup or because the user clicked to finish it.\n     *\n     * @param userFinish Whether the user clicked to finish the attempt.\n     * @param timeUp Whether the quiz time is up.\n     * @returns Promise resolved when done.\n     */\n    async finishAttempt(userFinish?: boolean, timeUp?: boolean): Promise<void> {\n        let modal: CoreIonLoadingElement | undefined;\n\n        try {\n            // Show confirm if the user clicked the finish button and the quiz is in progress.\n            if (!timeUp && this.attempt!.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS) {\n                await CoreDomUtils.showConfirm(Translate.instant('addon.mod_quiz.confirmclose'));\n            }\n\n            modal = await CoreDomUtils.showModalLoading('core.sending', true);\n\n            await this.processAttempt(userFinish, timeUp);\n\n            // Trigger an event to notify the attempt was finished.\n            CoreEvents.trigger(AddonModQuizProvider.ATTEMPT_FINISHED_EVENT, {\n                quizId: this.quiz!.id,\n                attemptId: this.attempt!.id,\n                synced: !this.offline,\n            }, CoreSites.getCurrentSiteId());\n\n            CoreEvents.trigger(CoreEvents.ACTIVITY_DATA_SENT, { module: 'quiz' });\n\n            // Leave the player.\n            this.forceLeave = true;\n            CoreNavigator.back();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorsaveattempt', true);\n        } finally {\n            modal?.dismiss();\n        }\n    }\n\n    /**\n     * Fix sequence checks of current page.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async fixSequenceChecks(): Promise<void> {\n        // Get current page data again to get the latest sequencechecks.\n        const data = await AddonModQuiz.getAttemptData(this.attempt!.id, this.attempt!.currentpage!, this.preflightData, {\n            cmId: this.quiz!.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        const newSequenceChecks: Record<number, { name: string; value: string }> = {};\n\n        data.questions.forEach((question) => {\n            const sequenceCheck = CoreQuestionHelper.getQuestionSequenceCheckFromHtml(question.html);\n            if (sequenceCheck) {\n                newSequenceChecks[question.slot] = sequenceCheck;\n            }\n        });\n\n        // Notify the new sequence checks to the components.\n        this.questionComponents?.forEach((component) => {\n            component.updateSequenceCheck(newSequenceChecks);\n        });\n    }\n\n    /**\n     * Get the input answers.\n     *\n     * @returns Object with the answers.\n     */\n    protected getAnswers(): CoreQuestionsAnswers {\n        return CoreQuestionHelper.getAnswersFromForm(document.forms['addon-mod_quiz-player-form']);\n    }\n\n    /**\n     * Initializes the timer if enabled.\n     */\n    protected initTimer(): void {\n        if (!this.attemptAccessInfo?.endtime || this.attemptAccessInfo.endtime < 0) {\n            return;\n        }\n\n        // Quiz has an end time. Check if time left should be shown.\n        const shouldShowTime = AddonModQuiz.shouldShowTimeLeft(\n            this.quizAccessInfo!.activerulenames,\n            this.attempt!,\n            this.attemptAccessInfo.endtime,\n        );\n\n        if (shouldShowTime) {\n            this.endTime = this.attemptAccessInfo.endtime;\n        } else {\n            delete this.endTime;\n        }\n    }\n\n    /**\n     * Load a page questions.\n     *\n     * @param page The page to load.\n     * @returns Promise resolved when done.\n     */\n    protected async loadPage(page: number): Promise<void> {\n        const data = await AddonModQuiz.getAttemptData(this.attempt!.id, page, this.preflightData, {\n            cmId: this.quiz!.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        // Update attempt, status could change during the execution.\n        this.attempt = data.attempt;\n        this.attempt.currentpage = page;\n\n        this.questions = data.questions;\n        this.nextPage = data.nextpage;\n        this.previousPage = this.isSequential ? -1 : page - 1;\n        this.showSummary = false;\n\n        this.questions.forEach((question) => {\n            // Get the readable mark for each question.\n            question.readableMark = AddonModQuizHelper.getQuestionMarkFromHtml(question.html);\n\n            // Extract the question info box.\n            CoreQuestionHelper.extractQuestionInfoBox(question, '.info');\n\n            // Check if the question is blocked. If it is, treat it as a description question.\n            if (AddonModQuiz.isQuestionBlocked(question)) {\n                question.type = 'description';\n            }\n        });\n\n        // Mark the page as viewed.\n        CoreUtils.ignoreErrors(\n            AddonModQuiz.logViewAttempt(this.attempt.id, page, this.preflightData, this.offline, this.quiz),\n        );\n\n        // Start looking for changes.\n        this.autoSave.startCheckChangesProcess(this.quiz!, this.attempt, this.preflightData, this.offline);\n    }\n\n    /**\n     * Load attempt summary.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadSummary(): Promise<void> {\n        this.summaryQuestions = [];\n\n        this.summaryQuestions = await AddonModQuiz.getAttemptSummary(this.attempt!.id, this.preflightData, {\n            cmId: this.quiz!.coursemodule,\n            loadLocal: this.offline,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.showSummary = true;\n        this.canReturn = this.attempt!.state == AddonModQuizProvider.ATTEMPT_IN_PROGRESS && !this.attempt!.finishedOffline;\n        this.preventSubmitMessages = AddonModQuiz.getPreventSubmitMessages(this.summaryQuestions);\n\n        this.dueDateWarning = AddonModQuiz.getAttemptDueDateWarning(this.quiz!, this.attempt!);\n\n        // Log summary as viewed.\n        CoreUtils.ignoreErrors(\n            AddonModQuiz.logViewAttemptSummary(this.attempt!.id, this.preflightData, this.quiz!.id, this.quiz!.name),\n        );\n    }\n\n    /**\n     * Load data to navigate the questions using the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async loadNavigation(): Promise<void> {\n        // We use the attempt summary to build the navigation because it contains all the questions.\n        this.navigation = await AddonModQuiz.getAttemptSummary(this.attempt!.id, this.preflightData, {\n            cmId: this.quiz!.coursemodule,\n            loadLocal: this.offline,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n        });\n\n        this.navigation.forEach((question) => {\n            question.stateClass = CoreQuestionHelper.getQuestionStateClass(question.state || '');\n        });\n    }\n\n    /**\n     * Open the navigation modal.\n     *\n     * @returns Promise resolved when done.\n     */\n    async openNavigation(): Promise<void> {\n\n        if (this.reloadNavigation) {\n            // Some data has changed, reload the navigation.\n            const modal = await CoreDomUtils.showModalLoading();\n\n            await CoreUtils.ignoreErrors(this.loadNavigation());\n\n            modal.dismiss();\n            this.reloadNavigation = false;\n        }\n\n        // Create the navigation modal.\n        const modalData = await CoreDomUtils.openSideModal<AddonModQuizNavigationModalReturn>({\n            component: AddonModQuizNavigationModalComponent,\n            componentProps: {\n                navigation: this.navigation,\n                summaryShown: this.showSummary,\n                currentPage: this.attempt?.currentpage,\n                isReview: false,\n            },\n        });\n\n        if (!modalData) {\n            return;\n        }\n\n        this.changePage(modalData.page!, true, modalData.slot);\n    }\n\n    /**\n     * Prepare the answers to be sent for the attempt.\n     *\n     * @returns Promise resolved with the answers.\n     */\n    protected prepareAnswers(): Promise<CoreQuestionsAnswers> {\n        return CoreQuestionHelper.prepareAnswers(\n            this.questions,\n            this.getAnswers(),\n            this.offline,\n            this.component,\n            this.quiz!.coursemodule,\n        );\n    }\n\n    /**\n     * Process attempt.\n     *\n     * @param userFinish Whether the user clicked to finish the attempt.\n     * @param timeUp Whether the quiz time is up.\n     * @param retrying Whether we're retrying the change.\n     * @returns Promise resolved when done.\n     */\n    protected async processAttempt(userFinish?: boolean, timeUp?: boolean, retrying?: boolean): Promise<void> {\n        // Get the answers to send.\n        let answers: CoreQuestionsAnswers = {};\n\n        if (!this.showSummary) {\n            answers = await this.prepareAnswers();\n        }\n\n        try {\n            // Send the answers.\n            await AddonModQuiz.processAttempt(\n                this.quiz!,\n                this.attempt!,\n                answers,\n                this.preflightData,\n                userFinish,\n                timeUp,\n                this.offline,\n            );\n        } catch (error) {\n            if (!error || error.errorcode != 'submissionoutofsequencefriendlymessage') {\n                throw error;\n            }\n\n            try {\n                // There was an error with the sequence check. Try to ammend it.\n                await this.fixSequenceChecks();\n            } catch {\n                throw error;\n            }\n\n            if (retrying) {\n                // We're already retrying, don't send the data again because it could cause an infinite loop.\n                throw error;\n            }\n\n            // Sequence checks updated, try to send the data again.\n            return this.processAttempt(userFinish, timeUp, true);\n        }\n\n        // Answers saved, cancel auto save.\n        this.autoSave.cancelAutoSave();\n        this.autoSave.hideAutoSaveError();\n\n        if (this.formElement) {\n            CoreForms.triggerFormSubmittedEvent(this.formElement, !this.offline, CoreSites.getCurrentSiteId());\n        }\n\n        return CoreQuestionHelper.clearTmpData(this.questions, this.component, this.quiz!.coursemodule);\n    }\n\n    /**\n     * Scroll to a certain question.\n     *\n     * @param slot Slot of the question to scroll to.\n     */\n    protected async scrollToQuestion(slot: number): Promise<void> {\n        await CoreUtils.nextTick();\n        await CoreComponentsRegistry.waitComponentsReady(this.elementRef.nativeElement, 'core-question');\n        await CoreDom.scrollToElement(\n            this.elementRef.nativeElement,\n            '#addon-mod_quiz-question-' + slot,\n        );\n    }\n\n    /**\n     * Show connection error.\n     *\n     * @param ev Click event.\n     */\n    showConnectionError(ev: Event): void {\n        this.autoSave.showAutoSaveError(ev);\n    }\n\n    /**\n     * Convenience function to start the player.\n     */\n    async start(): Promise<void> {\n        try {\n            this.loaded = false;\n\n            if (!this.quizDataLoaded) {\n                // Fetch data.\n                await this.fetchData();\n\n                this.quizDataLoaded = true;\n            }\n\n            // Quiz data has been loaded, try to start or continue.\n            await this.startOrContinueAttempt();\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Start or continue an attempt.\n     *\n     * @returns Promise resolved when done.\n     */\n    protected async startOrContinueAttempt(): Promise<void> {\n        try {\n            let attempt = this.newAttempt ? undefined : this.lastAttempt;\n\n            // Get the preflight data and start attempt if needed.\n            attempt = await AddonModQuizHelper.getAndCheckPreflightData(\n                this.quiz!,\n                this.quizAccessInfo!,\n                this.preflightData,\n                attempt,\n                this.offline,\n                false,\n                'addon.mod_quiz.startattempt',\n            );\n\n            // Re-fetch attempt access information with the right attempt (might have changed because a new attempt was created).\n            this.attemptAccessInfo = await AddonModQuiz.getAttemptAccessInformation(this.quiz!.id, attempt.id, {\n                cmId: this.quiz!.coursemodule,\n                readingStrategy: this.offline ? CoreSitesReadingStrategy.PREFER_CACHE : CoreSitesReadingStrategy.ONLY_NETWORK,\n            });\n\n            this.attempt = attempt;\n\n            await this.loadNavigation();\n\n            if (this.attempt.state != AddonModQuizProvider.ATTEMPT_OVERDUE && !this.attempt.finishedOffline) {\n                // Attempt not overdue and not finished in offline, load page.\n                await this.loadPage(this.attempt.currentpage!);\n\n                this.initTimer();\n            } else {\n                // Attempt is overdue or finished in offline, we can only load the summary.\n                await this.loadSummary();\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'addon.mod_quiz.errorgetquestions', true);\n        }\n    }\n\n    /**\n     * Quiz time has finished.\n     */\n    timeUp(): void {\n        if (this.timeUpCalled) {\n            return;\n        }\n\n        this.timeUpCalled = true;\n        this.finishAttempt(false, true);\n    }\n\n}\n\n/**\n * Question with some calculated data for the view.\n */\ntype QuizQuestion = CoreQuestionQuestionParsed & {\n    readableMark?: string;\n};\n","export default \"/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\n:host .addon-mod_quiz-question-note p {\\n  margin-top: 2px;\\n  margin-bottom: 2px;\\n}\\n:host ion-content ion-toolbar {\\n  border-bottom: 1px solid var(--stroke);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-0 {\\n  background-color: #ca3120 !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-0 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-0 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-0 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-1 {\\n  background-color: rgba(202, 49, 32, 0.9333333333) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-1 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-1 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-1 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-2 {\\n  background-color: rgba(202, 49, 32, 0.8666666667) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-2 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-2 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-2 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-3 {\\n  background-color: rgba(202, 49, 32, 0.8) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-3 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-3 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-3 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-4 {\\n  background-color: rgba(202, 49, 32, 0.7333333333) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-4 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-4 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-4 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-5 {\\n  background-color: rgba(202, 49, 32, 0.6666666667) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-5 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-5 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-5 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-6 {\\n  background-color: rgba(202, 49, 32, 0.6) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-6 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-6 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-6 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-7 {\\n  background-color: rgba(202, 49, 32, 0.5333333333) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-7 label, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-7 span, :host core-timer ::ng-deep .core-timer.core-timer-timeleft-7 ion-icon {\\n  color: var(--white);\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-8 {\\n  background-color: rgba(202, 49, 32, 0.4666666667) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-9 {\\n  background-color: rgba(202, 49, 32, 0.4) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-10 {\\n  background-color: rgba(202, 49, 32, 0.3333333333) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-11 {\\n  background-color: rgba(202, 49, 32, 0.2666666667) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-12 {\\n  background-color: rgba(202, 49, 32, 0.2) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-13 {\\n  background-color: rgba(202, 49, 32, 0.1333333333) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-14 {\\n  background-color: rgba(202, 49, 32, 0.0666666667) !important;\\n}\\n:host core-timer ::ng-deep .core-timer.core-timer-timeleft-15 {\\n  background-color: rgba(202, 49, 32, 0) !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";"],"sourceRoot":"webpack:///"}