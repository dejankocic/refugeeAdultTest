{"version":3,"sources":["./src/core/features/settings/pages/synchronization/synchronization.html","./src/core/features/login/sitelist.scss","./src/core/features/settings/pages/synchronization/synchronization.module.ts","./src/core/features/settings/pages/synchronization/synchronization.ts"],"names":[],"mappings":"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","file":"pages-synchronization-synchronization-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>{{ 'core.settings.synchronization' | translate }}</h1>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <core-navbar-buttons>\\n                <ion-button (click)=\\\"showInfo()\\\" [attr.aria-label]=\\\"'core.info' | translate\\\">\\n                    <ion-icon name=\\\"fas-info-circle\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-button>\\n            </core-navbar-buttons>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"limited-width\\\">\\n    <core-loading [hideUntil]=\\\"sitesLoaded\\\">\\n        <ion-list class=\\\"core-sitelist limited-width\\\">\\n            <ion-item-divider>\\n                <ion-label>\\n                    <h2>{{ 'core.settings.syncsettings' | translate }}</h2>\\n                </ion-label>\\n            </ion-item-divider>\\n            <ion-item class=\\\"ion-text-wrap\\\">\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">\\n                        {{ 'core.settings.syncdatasaver' | translate }}\\n                    </p>\\n                </ion-label>\\n                <ion-toggle slot=\\\"end\\\" [(ngModel)]=\\\"dataSaver\\\" (ngModelChange)=\\\"syncOnlyOnWifiChanged()\\\">\\n                </ion-toggle>\\n            </ion-item>\\n\\n            <ion-card class=\\\"core-warning-card\\\" *ngIf=\\\"!isOnline || (dataSaver && limitedConnection)\\\">\\n                <ion-item class=\\\"ion-text-wrap\\\">\\n                    <ion-icon name=\\\"fas-exclamation-triangle\\\" slot=\\\"start\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                    <ion-label>\\n                        <ng-container *ngIf=\\\"isOnline && dataSaver && limitedConnection\\\">\\n                            {{ 'core.settings.connectwifitosync' | translate }}</ng-container>\\n                        <ng-container *ngIf=\\\"!isOnline\\\">{{ 'core.settings.connecttosync' | translate }}</ng-container>\\n                    </ion-label>\\n                </ion-item>\\n            </ion-card>\\n\\n            <ng-container *ngIf=\\\"isOnline && (!dataSaver || !limitedConnection)\\\">\\n                <ion-item-divider>\\n                    <ion-label>\\n                        <h2>{{ 'core.accounts' | translate }}</h2>\\n                    </ion-label>\\n                </ion-item-divider>\\n\\n                <ion-card *ngIf=\\\"accountsList.currentSite\\\">\\n                    <ion-item-divider sticky=\\\"true\\\" class=\\\"core-sitelist-sitename\\\">\\n                        <ion-label>\\n                            <p class=\\\"item-heading\\\">\\n                                <core-format-text [text]=\\\"accountsList.currentSite.siteName\\\" clean=\\\"true\\\"\\n                                    [siteId]=\\\"accountsList.currentSite.id\\\"></core-format-text>\\n                            </p>\\n                            <p><a [href]=\\\"accountsList.currentSite.siteUrl\\\" core-link autoLogin=\\\"yes\\\">{{\\n                                    accountsList.currentSite.siteUrlWithoutProtocol }}</a>\\n                            </p>\\n                        </ion-label>\\n                    </ion-item-divider>\\n\\n                    <ion-item class=\\\"item-current\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"siteSync; context: {site: accountsList.currentSite}\\\"></ng-container>\\n                    </ion-item>\\n\\n                    <ion-item *ngFor=\\\"let site of accountsList.sameSite\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"siteSync; context: {site: site}\\\"></ng-container>\\n                    </ion-item>\\n                </ion-card>\\n\\n                <ion-card *ngFor=\\\"let sites of accountsList.otherSites\\\">\\n                    <ion-item-divider sticky=\\\"true\\\" *ngIf=\\\"sites[0]\\\" class=\\\"core-sitelist-sitename\\\">\\n                        <ion-label>\\n                            <p class=\\\"item-heading\\\">\\n                                <core-format-text [text]=\\\"sites[0].siteName\\\" clean=\\\"true\\\" [siteId]=\\\"sites[0].id\\\"></core-format-text>\\n                            </p>\\n                            <p><a [href]=\\\"sites[0].siteUrl\\\" core-link autoLogin=\\\"no\\\">{{ sites[0].siteUrlWithoutProtocol }}</a></p>\\n                        </ion-label>\\n                    </ion-item-divider>\\n\\n                    <ion-item *ngFor=\\\"let site of sites\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"siteSync; context: {site: site}\\\"></ng-container>\\n                    </ion-item>\\n                </ion-card>\\n            </ng-container>\\n        </ion-list>\\n    </core-loading>\\n</ion-content>\\n\\n<!-- Template to render a site to sync. -->\\n<ng-template #siteSync let-site=\\\"site\\\">\\n    <ion-avatar slot=\\\"start\\\">\\n        <img [src]=\\\"site.avatar\\\" core-external-content [siteId]=\\\"site.id\\\" alt=\\\"{{ 'core.pictureof' | translate:{$a: site.fullName} }}\\\"\\n            onError=\\\"this.src='assets/img/user-avatar.png'\\\">\\n    </ion-avatar>\\n    <ion-label>\\n        <p class=\\\"item-heading\\\">{{site.fullName}}</p>\\n        <p class=\\\"text-danger\\\" *ngIf=\\\"site.loggedOut\\\">{{ 'core.settings.logintosync' | translate }}</p>\\n    </ion-label>\\n    <core-button-with-spinner [loading]=\\\"isSynchronizing(site.id)\\\" slot=\\\"end\\\" *ngIf=\\\"!site.loggedOut\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"synchronize(site.id)\\\" [attr.aria-label]=\\\"'core.settings.synchronizenow' | translate\\\">\\n            <ion-icon name=\\\"fas-sync-alt\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n        </ion-button>\\n    </core-button-with-spinner>\\n    <ion-button fill=\\\"clear\\\" (click)=\\\"login(site.id)\\\" [attr.aria-label]=\\\"'core.login.login' | translate\\\" *ngIf=\\\"site.loggedOut\\\" slot=\\\"end\\\">\\n        <ion-icon name=\\\"fas-sign-in-alt\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n    </ion-button>\\n</ng-template>\\n\";","export default \"ion-list.core-sitelist .core-sitelist-sitename {\\n  border-bottom: 1px solid var(--stroke);\\n}\\nion-list.core-sitelist .core-sitelist-sitename ion-label {\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb3JlL2ZlYXR1cmVzL2xvZ2luL3NpdGVsaXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFNSSxzQ0FBQTtBQUxSO0FBQVE7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUFFWiIsImZpbGUiOiJzcmMvY29yZS9mZWF0dXJlcy9sb2dpbi9zaXRlbGlzdC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWxpc3QuY29yZS1zaXRlbGlzdCB7XG4gICAgLmNvcmUtc2l0ZWxpc3Qtc2l0ZW5hbWUge1xuICAgICAgICBpb24tbGFiZWwge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgICAgICB9XG5cbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHZhcigtLXN0cm9rZSk7XG4gICAgfVxufVxuIl19 */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreSettingsSynchronizationPage } from './synchronization';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreSettingsSynchronizationPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreSettingsSynchronizationPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreSettingsSynchronizationPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { CoreConstants } from '@/core/constants';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreConfig } from '@services/config';\nimport { CoreSettingsHelper } from '@features/settings/services/settings-helper';\nimport { NgZone, Translate } from '@singletons';\nimport { CoreAccountsList, CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreNetwork } from '@services/network';\nimport { Subscription } from 'rxjs';\nimport { CoreNavigator } from '@services/navigator';\n\n/**\n * Page that displays the synchronization settings.\n */\n@Component({\n    selector: 'page-core-app-settings-synchronization',\n    templateUrl: 'synchronization.html',\n    styleUrls: ['../../../login/sitelist.scss'],\n})\nexport class CoreSettingsSynchronizationPage implements OnInit, OnDestroy {\n\n    accountsList: CoreAccountsList = {\n        sameSite: [],\n        otherSites: [],\n        count: 0,\n    };\n\n    sitesLoaded = false;\n    dataSaver = false;\n    limitedConnection = false;\n    isOnline = true;\n\n    protected isDestroyed = false;\n    protected sitesObserver: CoreEventObserver;\n    protected networkObserver: Subscription;\n\n    constructor() {\n\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, async (data) => {\n            const siteId = data.siteId;\n\n            let siteEntry = siteId === this.accountsList.currentSite?.id\n                ? this.accountsList.currentSite\n                : undefined;\n\n            if (!siteEntry) {\n                siteEntry = this.accountsList.sameSite.find((siteEntry) => siteEntry.id === siteId);\n            }\n\n            if (!siteEntry) {\n                this.accountsList.otherSites.some((sites) => {\n                    siteEntry = sites.find((siteEntry) => siteEntry.id === siteId);\n\n                    return siteEntry;\n                });\n            }\n\n            if (!siteEntry) {\n                return;\n            }\n\n            const site = await CoreSites.getSite(siteId);\n\n            const siteInfo = site.getInfo();\n\n            siteEntry.siteName = site.getSiteName();\n\n            if (siteInfo) {\n                siteEntry.siteUrl = siteInfo.siteurl;\n                siteEntry.fullName = siteInfo.fullname;\n            }\n        });\n\n        this.isOnline = CoreNetwork.isOnline();\n        this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n\n        this.networkObserver = CoreNetwork.onChange().subscribe(() => {\n            // Execute the callback in the Angular zone, so change detection doesn't stop working.\n            NgZone.run(() => {\n                this.isOnline = CoreNetwork.isOnline();\n                this.limitedConnection = this.isOnline && CoreNetwork.isNetworkAccessLimited();\n            });\n        });\n\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        const currentSiteId = CoreSites.getCurrentSiteId();\n\n        try {\n            this.accountsList = await CoreLoginHelper.getAccountsList(currentSiteId);\n        } catch {\n            // Ignore errors.\n        }\n\n        this.sitesLoaded = true;\n\n        this.dataSaver = await CoreConfig.get(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, true);\n    }\n\n    /**\n     * Called when sync only on wifi setting is enabled or disabled.\n     */\n    syncOnlyOnWifiChanged(): void {\n        CoreConfig.set(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, this.dataSaver ? 1 : 0);\n    }\n\n    /**\n     * Synchronizes a site.\n     *\n     * @param siteId Site ID.\n     */\n    async synchronize(siteId: string): Promise<void> {\n        // Using syncOnlyOnWifi false to force manual sync.\n        try {\n            await CoreSettingsHelper.synchronizeSite(false, siteId);\n        } catch (error) {\n            if (this.isDestroyed) {\n                return;\n            }\n\n            CoreDomUtils.showErrorModalDefault(error, 'core.settings.sitesyncfailed', true);\n        }\n    }\n\n    /**\n     * Changes site.\n     *\n     * @param siteId Site ID.\n     */\n    async login(siteId: string): Promise<void> {\n        // This navigation will logout and navigate to the site home.\n        await CoreNavigator.navigateToSiteHome({ preferCurrentTab: false , siteId });\n    }\n\n    /**\n     * Returns true if site is beeing synchronized.\n     *\n     * @param siteId Site ID.\n     * @returns True if site is beeing synchronized, false otherwise.\n     */\n    isSynchronizing(siteId: string): boolean {\n        return !!CoreSettingsHelper.getSiteSyncPromise(siteId);\n    }\n\n    /**\n     * Show information about sync actions.\n     */\n    showInfo(): void {\n        CoreDomUtils.showAlert(\n            Translate.instant('core.help'),\n            Translate.instant('core.settings.synchronizenowhelp'),\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.sitesObserver.off();\n        this.networkObserver.unsubscribe();\n    }\n\n}\n"],"sourceRoot":"webpack:///"}