{"version":3,"sources":["./src/core/features/settings/pages/space-usage/space-usage.html","./src/core/features/settings/pages/space-usage/space-usage.module.ts","./src/core/features/settings/pages/space-usage/space-usage.ts"],"names":[],"mappings":"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","file":"pages-space-usage-space-usage-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>{{ 'core.settings.spaceusage' | translate }}</h1>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <core-navbar-buttons>\\n            </core-navbar-buttons>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"limited-width\\\">\\n    <ion-refresher [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshData($event.target)\\\" slot=\\\"fixed\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <ion-list class=\\\"core-sitelist limited-width\\\">\\n            <ion-card *ngIf=\\\"accountsList.currentSite\\\">\\n                <ion-item-divider sticky=\\\"true\\\" class=\\\"core-sitelist-sitename\\\">\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">\\n                            <core-format-text [text]=\\\"accountsList.currentSite.siteName\\\" clean=\\\"true\\\"\\n                                [siteId]=\\\"accountsList.currentSite.id\\\"></core-format-text>\\n                        </p>\\n                        <p><a [href]=\\\"accountsList.currentSite.siteUrl\\\" core-link autoLogin=\\\"yes\\\">{{\\n                                accountsList.currentSite.siteUrlWithoutProtocol }}</a>\\n                        </p>\\n                    </ion-label>\\n                </ion-item-divider>\\n\\n                <ion-item class=\\\"item-current\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"siteUsage; context: {site: accountsList.currentSite}\\\"></ng-container>\\n                </ion-item>\\n\\n                <ion-item *ngFor=\\\"let site of accountsList.sameSite\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"siteUsage; context: {site: site}\\\"></ng-container>\\n                </ion-item>\\n            </ion-card>\\n\\n            <ion-card *ngFor=\\\"let sites of accountsList.otherSites\\\">\\n                <ion-item-divider sticky=\\\"true\\\" *ngIf=\\\"sites[0]\\\" class=\\\"core-sitelist-sitename\\\">\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">\\n                            <core-format-text [text]=\\\"sites[0].siteName\\\" clean=\\\"true\\\" [siteId]=\\\"sites[0].id\\\"></core-format-text>\\n                        </p>\\n                        <p><a [href]=\\\"sites[0].siteUrl\\\" core-link autoLogin=\\\"no\\\">{{ sites[0].siteUrlWithoutProtocol }}</a></p>\\n                    </ion-label>\\n                </ion-item-divider>\\n\\n                <ion-item *ngFor=\\\"let site of sites\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"siteUsage; context: {site: site}\\\"></ng-container>\\n                </ion-item>\\n            </ion-card>\\n\\n            <ion-item-divider>\\n                <ion-label>\\n                    <h2>{{ 'core.settings.total' | translate }}</h2>\\n                </ion-label>\\n                <p slot=\\\"end\\\" class=\\\"ion-margin-end\\\">\\n                    {{ totalSpaceUsage | coreBytesToSize }}\\n                </p>\\n            </ion-item-divider>\\n        </ion-list>\\n    </core-loading>\\n</ion-content>\\n\\n<!-- Template to render a site space usage. -->\\n<ng-template #siteUsage let-site=\\\"site\\\">\\n    <ion-avatar slot=\\\"start\\\">\\n        <img [src]=\\\"site.avatar\\\" core-external-content [siteId]=\\\"site.id\\\" alt=\\\"{{ 'core.pictureof' | translate:{$a: site.fullName} }}\\\"\\n            onError=\\\"this.src='assets/img/user-avatar.png'\\\">\\n    </ion-avatar>\\n    <ion-label class=\\\"ion-text-wrap\\\">\\n        <p class=\\\"item-heading\\\">{{site.fullName}}</p>\\n        <ion-badge color=\\\"light\\\" *ngIf=\\\"site.spaceUsage !== undefined\\\">{{ site.spaceUsage | coreBytesToSize }}</ion-badge>\\n    </ion-label>\\n    <ion-button fill=\\\"clear\\\" color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"deleteSiteStorage(site)\\\"\\n        [hidden]=\\\"site.spaceUsage <= 0 && !site.hasCacheEntries\\\">\\n        <ion-icon name=\\\"fas-trash\\\" slot=\\\"icon-only\\\"\\n            [attr.aria-label]=\\\"'addon.storagemanager.deletedatafrom' | translate: { name: site.siteName }\\\">\\n        </ion-icon>\\n    </ion-button>\\n</ng-template>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreSettingsSpaceUsagePage } from './space-usage';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreSettingsSpaceUsagePage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreSettingsSpaceUsagePage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreSettingsSpaceUsagePageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\n\nimport { CoreSiteBasicInfo, CoreSites } from '@services/sites';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\n\nimport { CoreSettingsHelper } from '../../services/settings-helper';\n\n/**\n * Page that displays the space usage settings.\n */\n@Component({\n    selector: 'page-core-app-settings-space-usage',\n    templateUrl: 'space-usage.html',\n})\nexport class CoreSettingsSpaceUsagePage implements OnInit, OnDestroy {\n\n    loaded = false;\n    totalSpaceUsage = 0;\n\n    accountsList: CoreAccountsListWithUsage = {\n        sameSite: [],\n        otherSites: [],\n    };\n\n    protected sitesObserver: CoreEventObserver;\n\n    constructor() {\n        this.sitesObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, async (data) => {\n            const siteId = data.siteId;\n\n            let siteEntry = siteId === this.accountsList.currentSite?.id\n                ? this.accountsList.currentSite\n                : undefined;\n\n            if (!siteEntry) {\n                siteEntry = this.accountsList.sameSite.find((siteEntry) => siteEntry.id === siteId);\n            }\n\n            if (!siteEntry) {\n                this.accountsList.otherSites.some((sites) => {\n                    siteEntry = sites.find((siteEntry) => siteEntry.id === siteId);\n\n                    return siteEntry;\n                });\n            }\n\n            if (!siteEntry) {\n                return;\n            }\n\n            const site = await CoreSites.getSite(siteId);\n            const siteInfo = site.getInfo();\n            siteEntry.siteName = site.getSiteName();\n\n            if (siteInfo) {\n                siteEntry.siteUrl = siteInfo.siteurl;\n                siteEntry.fullName = siteInfo.fullname;\n            }\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.loadSiteData().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Convenience function to load site data/usage and calculate the totals.\n     *\n     * @returns Resolved when done.\n     */\n    protected async loadSiteData(): Promise<void> {\n        // Calculate total usage.\n        let totalSize = 0;\n\n        const sites = await CoreUtils.ignoreErrors(CoreSites.getSortedSites(), [] as CoreSiteBasicInfo[]);\n        const sitesWithUsage = await Promise.all(sites.map((site) => this.getSiteWithUsage(site)));\n\n        let siteUrl = '';\n\n        const currentSiteId = CoreSites.getCurrentSiteId();\n\n        if (currentSiteId) {\n            const index = sitesWithUsage.findIndex((site) => site.id === currentSiteId);\n\n            const siteWithUsage = sitesWithUsage.splice(index, 1)[0];\n            this.accountsList.currentSite = siteWithUsage;\n            totalSize += siteWithUsage.spaceUsage || 0;\n\n            siteUrl = this.accountsList.currentSite.siteUrlWithoutProtocol;\n        }\n\n        const otherSites: Record<string, CoreSiteBasicInfoWithUsage[]> = {};\n\n        // Get space usage.\n        sitesWithUsage.forEach((siteWithUsage) => {\n            totalSize += siteWithUsage.spaceUsage || 0;\n\n            if (siteWithUsage.siteUrlWithoutProtocol === siteUrl) {\n                this.accountsList.sameSite.push(siteWithUsage);\n            } else {\n                if (otherSites[siteWithUsage.siteUrlWithoutProtocol] === undefined) {\n                    otherSites[siteWithUsage.siteUrlWithoutProtocol] = [];\n                }\n\n                otherSites[siteWithUsage.siteUrlWithoutProtocol].push(siteWithUsage);\n            }\n        });\n\n        this.accountsList.otherSites = CoreUtils.objectToArray(otherSites);\n\n        this.totalSpaceUsage = totalSize;\n    }\n\n    /**\n     * Get site with space usage.\n     *\n     * @param site Site to check.\n     * @returns Site with usage.\n     */\n    protected async getSiteWithUsage(site: CoreSiteBasicInfo): Promise<CoreSiteBasicInfoWithUsage> {\n        const siteInfo = await CoreSettingsHelper.getSiteSpaceUsage(site.id);\n\n        return Object.assign(site, {\n            hasCacheEntries: siteInfo.cacheEntries > 0,\n            spaceUsage: siteInfo.spaceUsage,\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param refresher Refresher event.\n     */\n    refreshData(refresher?: IonRefresher): void {\n        this.loadSiteData().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n    /**\n     * Deletes files of a site and the tables that can be cleared.\n     *\n     * @param siteData Site object with space usage.\n     */\n    async deleteSiteStorage(siteData: CoreSiteBasicInfoWithUsage): Promise<void> {\n        try {\n            const newInfo = await CoreSettingsHelper.deleteSiteStorage(siteData.siteName || '', siteData.id);\n\n            this.totalSpaceUsage -= siteData.spaceUsage - newInfo.spaceUsage;\n\n            siteData.spaceUsage = newInfo.spaceUsage;\n            siteData.hasCacheEntries = newInfo.cacheEntries > 0;\n        } catch {\n            // Ignore cancelled confirmation modal.\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.sitesObserver.off();\n    }\n\n}\n\n/**\n * Basic site info with space usage and cache entries that can be erased.\n */\ninterface CoreSiteBasicInfoWithUsage extends CoreSiteBasicInfo {\n    hasCacheEntries: boolean; // If has cached entries that can be cleared.\n    spaceUsage: number; // Space used in this site.\n}\n\n/**\n * Accounts list for selecting sites interfaces.\n */\ntype CoreAccountsListWithUsage = {\n    currentSite?: CoreSiteBasicInfoWithUsage; // If logged in, current site info.\n    sameSite: CoreSiteBasicInfoWithUsage[]; // If logged in, accounts info on the same site.\n    otherSites: CoreSiteBasicInfoWithUsage[][]; // Other accounts in other sites.\n};\n"],"sourceRoot":"webpack:///"}